/// specs/grammarkdown.grammar:
SyntaxKind[Identifier](4,1): SourceCharacter
SyntaxKind[ColonColonToken](4,17): ::
SyntaxKind[GreaterThanToken](5,2): >
SyntaxKind[ProseFull](5,4): any Unicode code point
SyntaxKind[Identifier](7,1): WhiteSpace
SyntaxKind[ColonColonToken](7,12): ::
SyntaxKind[UnicodeCharacterLiteral](8,2): <TAB>
SyntaxKind[UnicodeCharacterLiteral](9,2): <VT>
SyntaxKind[UnicodeCharacterLiteral](10,2): <FF>
SyntaxKind[UnicodeCharacterLiteral](11,2): <SP>
SyntaxKind[Identifier](17,1): LineTerminator
SyntaxKind[ColonColonToken](17,16): ::
SyntaxKind[UnicodeCharacterLiteral](18,2): <LF>
SyntaxKind[UnicodeCharacterLiteral](19,2): <CR>
SyntaxKind[UnicodeCharacterLiteral](20,2): <LS>
SyntaxKind[UnicodeCharacterLiteral](21,2): <PS>
SyntaxKind[Identifier](23,1): LineTerminatorSequence
SyntaxKind[ColonColonToken](23,24): ::
SyntaxKind[UnicodeCharacterLiteral](24,2): <LF>
SyntaxKind[UnicodeCharacterLiteral](25,2): <CR>
SyntaxKind[OpenBracketToken](25,7): [
SyntaxKind[LookaheadKeyword](25,8): lookahead
SyntaxKind[ExclamationEqualsToken](25,18): !=
SyntaxKind[UnicodeCharacterLiteral](25,21): <LF>
SyntaxKind[CloseBracketToken](25,25): ]
SyntaxKind[UnicodeCharacterLiteral](26,2): <LS>
SyntaxKind[UnicodeCharacterLiteral](27,2): <PS>
SyntaxKind[UnicodeCharacterLiteral](28,2): <CR>
SyntaxKind[UnicodeCharacterLiteral](28,7): <LF>
SyntaxKind[Identifier](30,1): Comment
SyntaxKind[ColonColonToken](30,9): ::
SyntaxKind[Identifier](31,2): MultiLineComment
SyntaxKind[Identifier](32,2): SingleLineComment
SyntaxKind[Identifier](34,1): MultiLineComment
SyntaxKind[ColonColonToken](34,18): ::
SyntaxKind[TerminalLiteral](35,2): `/*`
SyntaxKind[Identifier](35,7): MultiLineCommentChars
SyntaxKind[QuestionToken](35,28): ?
SyntaxKind[TerminalLiteral](35,30): `*/`
SyntaxKind[Identifier](37,1): MultiLineCommentChars
SyntaxKind[ColonColonToken](37,23): ::
SyntaxKind[Identifier](38,2): MultiLineCommentNotAsteriskChar
SyntaxKind[Identifier](38,34): MultiLineCommentChars
SyntaxKind[QuestionToken](38,55): ?
SyntaxKind[TerminalLiteral](39,2): `*`
SyntaxKind[Identifier](39,6): MultiLineCommentPostAsteriskChars
SyntaxKind[QuestionToken](39,39): ?
SyntaxKind[Identifier](41,1): MultiLineCommentPostAsteriskChars
SyntaxKind[ColonColonToken](41,35): ::
SyntaxKind[Identifier](42,2): MultiLineCommentNotForwardSlashOrAsteriskChar
SyntaxKind[Identifier](42,48): MultiLineCommentChars
SyntaxKind[QuestionToken](42,69): ?
SyntaxKind[TerminalLiteral](43,2): `*`
SyntaxKind[Identifier](43,6): MultiLineCommentPostAsteriskChars
SyntaxKind[QuestionToken](43,39): ?
SyntaxKind[Identifier](45,1): MultiLineCommentNotAsteriskChar
SyntaxKind[ColonColonToken](45,33): ::
SyntaxKind[Identifier](46,2): SourceCharacter
SyntaxKind[ButKeyword](46,18): but
SyntaxKind[NotKeyword](46,22): not
SyntaxKind[TerminalLiteral](46,26): `*`
SyntaxKind[Identifier](48,1): MultiLineCommentNotForwardSlashOrAsteriskChar
SyntaxKind[ColonColonToken](48,47): ::
SyntaxKind[Identifier](49,2): SourceCharacter
SyntaxKind[ButKeyword](49,18): but
SyntaxKind[NotKeyword](49,22): not
SyntaxKind[OneKeyword](49,26): one
SyntaxKind[OfKeyword](49,30): of
SyntaxKind[TerminalLiteral](49,33): `/`
SyntaxKind[OrKeyword](49,37): or
SyntaxKind[TerminalLiteral](49,40): `*`
SyntaxKind[Identifier](51,1): SingleLineComment
SyntaxKind[ColonColonToken](51,19): ::
SyntaxKind[TerminalLiteral](52,2): `//`
SyntaxKind[Identifier](52,7): SingleLineCommentChars
SyntaxKind[QuestionToken](52,29): ?
SyntaxKind[Identifier](54,1): SingleLineCommentChars
SyntaxKind[ColonColonToken](54,24): ::
SyntaxKind[Identifier](55,2): SingleLineCommentChar
SyntaxKind[Identifier](55,24): SingleLineCommentChars
SyntaxKind[QuestionToken](55,46): ?
SyntaxKind[Identifier](57,1): SingleLineCommentChar
SyntaxKind[ColonColonToken](57,23): ::
SyntaxKind[Identifier](58,2): SourceCharacter
SyntaxKind[ButKeyword](58,18): but
SyntaxKind[NotKeyword](58,22): not
SyntaxKind[Identifier](58,26): LineTerminator
SyntaxKind[Identifier](60,1): HtmlTrivia
SyntaxKind[ColonColonToken](60,12): ::
SyntaxKind[Identifier](61,2): HtmlTagTrivia
SyntaxKind[Identifier](62,2): HtmlCommentTrivia
SyntaxKind[Identifier](64,1): HtmlTagTrivia
SyntaxKind[ColonColonToken](64,15): ::
SyntaxKind[TerminalLiteral](65,2): `<`
SyntaxKind[Identifier](65,6): HtmlTagName
SyntaxKind[Identifier](65,18): HtmlTagContentChars
SyntaxKind[QuestionToken](65,37): ?
SyntaxKind[TerminalLiteral](65,39): `>`
SyntaxKind[TerminalLiteral](66,2): `</`
SyntaxKind[Identifier](66,7): HtmlTagName
SyntaxKind[Identifier](66,19): HtmlTagContentChars
SyntaxKind[QuestionToken](66,38): ?
SyntaxKind[TerminalLiteral](66,40): `>`
SyntaxKind[Identifier](68,1): HtmlTagName
SyntaxKind[ColonColonToken](68,13): ::
SyntaxKind[Identifier](69,2): HtmlTagNameNotLowerUChar
SyntaxKind[Identifier](69,27): HtmlTagNameChars
SyntaxKind[QuestionToken](69,43): ?
SyntaxKind[TerminalLiteral](70,2): `u`
SyntaxKind[OpenBracketToken](70,6): [
SyntaxKind[LookaheadKeyword](70,7): lookahead
SyntaxKind[ExclamationEqualsToken](70,17): !=
SyntaxKind[TerminalLiteral](70,20): `+`
SyntaxKind[CloseBracketToken](70,23): ]
SyntaxKind[Identifier](70,25): HtmlTagNameChars
SyntaxKind[QuestionToken](70,41): ?
SyntaxKind[Identifier](72,1): HtmlTagNameChars
SyntaxKind[ColonColonToken](72,18): ::
SyntaxKind[Identifier](73,2): HtmlTagNameChar
SyntaxKind[Identifier](73,18): HtmlTagNameChars
SyntaxKind[QuestionToken](73,34): ?
SyntaxKind[Identifier](75,1): HtmlTagNameChar
SyntaxKind[ColonColonToken](75,17): ::
SyntaxKind[OneKeyword](75,20): one
SyntaxKind[OfKeyword](75,24): of
SyntaxKind[TerminalLiteral](76,2): `a`
SyntaxKind[TerminalLiteral](76,6): `b`
SyntaxKind[TerminalLiteral](76,10): `c`
SyntaxKind[TerminalLiteral](76,14): `d`
SyntaxKind[TerminalLiteral](76,18): `e`
SyntaxKind[TerminalLiteral](76,22): `f`
SyntaxKind[TerminalLiteral](76,26): `g`
SyntaxKind[TerminalLiteral](76,30): `h`
SyntaxKind[TerminalLiteral](76,34): `i`
SyntaxKind[TerminalLiteral](76,38): `j`
SyntaxKind[TerminalLiteral](76,42): `k`
SyntaxKind[TerminalLiteral](76,46): `l`
SyntaxKind[TerminalLiteral](76,50): `m`
SyntaxKind[TerminalLiteral](76,54): `n`
SyntaxKind[TerminalLiteral](76,58): `o`
SyntaxKind[TerminalLiteral](76,62): `p`
SyntaxKind[TerminalLiteral](76,66): `q`
SyntaxKind[TerminalLiteral](76,70): `r`
SyntaxKind[TerminalLiteral](76,74): `s`
SyntaxKind[TerminalLiteral](76,78): `t`
SyntaxKind[TerminalLiteral](76,82): `u`
SyntaxKind[TerminalLiteral](76,86): `v`
SyntaxKind[TerminalLiteral](76,90): `w`
SyntaxKind[TerminalLiteral](76,94): `x`
SyntaxKind[TerminalLiteral](76,98): `y`
SyntaxKind[TerminalLiteral](76,102): `z`
SyntaxKind[Identifier](78,1): HtmlTagNameNotLowerUChar
SyntaxKind[ColonColonToken](78,26): ::
SyntaxKind[Identifier](79,2): HtmlTagNameChar
SyntaxKind[ButKeyword](79,18): but
SyntaxKind[NotKeyword](79,22): not
SyntaxKind[TerminalLiteral](79,26): `u`
SyntaxKind[Identifier](81,1): HtmlTagContentChars
SyntaxKind[ColonColonToken](81,21): ::
SyntaxKind[Identifier](82,2): HtmlTagContentChar
SyntaxKind[Identifier](82,21): HtmlTagContentChars
SyntaxKind[QuestionToken](82,40): ?
SyntaxKind[Identifier](84,1): HtmlTagContentChar
SyntaxKind[ColonColonToken](84,20): ::
SyntaxKind[Identifier](85,2): SourceCharacter
SyntaxKind[ButKeyword](85,18): but
SyntaxKind[NotKeyword](85,22): not
SyntaxKind[TerminalLiteral](85,26): `>`
SyntaxKind[Identifier](87,1): HtmlCommentTrivia
SyntaxKind[ColonColonToken](87,19): ::
SyntaxKind[TerminalLiteral](88,2): `<!--`
SyntaxKind[Identifier](88,9): HtmlCommentChars
SyntaxKind[QuestionToken](88,25): ?
SyntaxKind[TerminalLiteral](88,27): `-->`
SyntaxKind[Identifier](90,1): HtmlCommentChars
SyntaxKind[ColonColonToken](90,18): ::
SyntaxKind[Identifier](91,2): HtmlCommentNotMinusChar
SyntaxKind[Identifier](91,26): HtmlCommentChars
SyntaxKind[QuestionToken](91,42): ?
SyntaxKind[TerminalLiteral](92,2): `-`
SyntaxKind[Identifier](92,6): HtmlCommentPostMinusChars
SyntaxKind[QuestionToken](92,31): ?
SyntaxKind[Identifier](94,1): HtmlCommentPostMinusChars
SyntaxKind[ColonColonToken](94,27): ::
SyntaxKind[Identifier](95,2): HtmlCommentNotMinusChar
SyntaxKind[Identifier](95,26): HtmlCommentChars
SyntaxKind[QuestionToken](95,42): ?
SyntaxKind[TerminalLiteral](96,2): `-`
SyntaxKind[Identifier](96,6): HtmlCommentPostMinusMinusChars
SyntaxKind[QuestionToken](96,36): ?
SyntaxKind[Identifier](98,1): HtmlCommentPostMinusMinusChars
SyntaxKind[ColonColonToken](98,32): ::
SyntaxKind[Identifier](99,2): HtmlCommentNotMinusOrGreaterThanChar
SyntaxKind[Identifier](99,39): HtmlCommentChars
SyntaxKind[QuestionToken](99,55): ?
SyntaxKind[TerminalLiteral](100,2): `-`
SyntaxKind[Identifier](100,6): HtmlCommentPostMinusMinusChars
SyntaxKind[QuestionToken](100,36): ?
SyntaxKind[Identifier](102,1): HtmlCommentNotMinusChar
SyntaxKind[ColonColonToken](102,25): ::
SyntaxKind[Identifier](103,2): SourceCharacter
SyntaxKind[ButKeyword](103,18): but
SyntaxKind[NotKeyword](103,22): not
SyntaxKind[TerminalLiteral](103,26): `-`
SyntaxKind[Identifier](105,1): HtmlCommentNotMinusOrGreaterThanChar
SyntaxKind[ColonColonToken](105,38): ::
SyntaxKind[Identifier](106,2): SourceCharacter
SyntaxKind[ButKeyword](106,18): but
SyntaxKind[NotKeyword](106,22): not
SyntaxKind[OneKeyword](106,26): one
SyntaxKind[OfKeyword](106,30): of
SyntaxKind[TerminalLiteral](106,33): `-`
SyntaxKind[OrKeyword](106,37): or
SyntaxKind[TerminalLiteral](106,40): `>`
SyntaxKind[Identifier](108,1): HtmlEntity
SyntaxKind[ColonColonToken](108,12): ::
SyntaxKind[TerminalLiteral](109,2): `&#`
SyntaxKind[Identifier](109,7): HtmlEntityEscapeSequence
SyntaxKind[TerminalLiteral](109,32): `;`
SyntaxKind[TerminalLiteral](110,2): `&`
SyntaxKind[Identifier](110,6): HtmlEntityName
SyntaxKind[TerminalLiteral](110,21): `;`
SyntaxKind[Identifier](112,1): HtmlEntityEscapeSequence
SyntaxKind[ColonColonToken](112,26): ::
SyntaxKind[Identifier](113,2): HtmlEntityDecimalSequence
SyntaxKind[Identifier](114,2): HtmlEntityHexSequence
SyntaxKind[Identifier](116,1): HtmlEntityDecimalSequence
SyntaxKind[ColonColonToken](116,27): ::
SyntaxKind[Identifier](117,2): DecimalDigits
SyntaxKind[Identifier](119,1): HtmlEntityHexSequence
SyntaxKind[ColonColonToken](119,23): ::
SyntaxKind[TerminalLiteral](120,2): `X`
SyntaxKind[Identifier](120,6): HexDigits
SyntaxKind[TerminalLiteral](121,2): `x`
SyntaxKind[Identifier](121,6): HexDigits
SyntaxKind[Identifier](123,1): HtmlEntityName
SyntaxKind[ColonColonToken](123,16): ::
SyntaxKind[TerminalLiteral](124,2): `quot`
SyntaxKind[TerminalLiteral](125,2): `amp`
SyntaxKind[TerminalLiteral](126,2): `apos`
SyntaxKind[TerminalLiteral](127,2): `lt`
SyntaxKind[TerminalLiteral](128,2): `gt`
SyntaxKind[TerminalLiteral](129,2): `nbsp`
SyntaxKind[TerminalLiteral](130,2): `iexcl`
SyntaxKind[TerminalLiteral](131,2): `cent`
SyntaxKind[TerminalLiteral](132,2): `pound`
SyntaxKind[TerminalLiteral](133,2): `curren`
SyntaxKind[TerminalLiteral](134,2): `yen`
SyntaxKind[TerminalLiteral](135,2): `brvbar`
SyntaxKind[TerminalLiteral](136,2): `sect`
SyntaxKind[TerminalLiteral](137,2): `uml`
SyntaxKind[TerminalLiteral](138,2): `copy`
SyntaxKind[TerminalLiteral](139,2): `ordf`
SyntaxKind[TerminalLiteral](140,2): `laquo`
SyntaxKind[TerminalLiteral](141,2): `not`
SyntaxKind[TerminalLiteral](142,2): `shy`
SyntaxKind[TerminalLiteral](143,2): `reg`
SyntaxKind[TerminalLiteral](144,2): `macr`
SyntaxKind[TerminalLiteral](145,2): `deg`
SyntaxKind[TerminalLiteral](146,2): `plusmn`
SyntaxKind[TerminalLiteral](147,2): `sup2`
SyntaxKind[TerminalLiteral](148,2): `sup3`
SyntaxKind[TerminalLiteral](149,2): `acute`
SyntaxKind[TerminalLiteral](150,2): `micro`
SyntaxKind[TerminalLiteral](151,2): `para`
SyntaxKind[TerminalLiteral](152,2): `middot`
SyntaxKind[TerminalLiteral](153,2): `cedil`
SyntaxKind[TerminalLiteral](154,2): `sup1`
SyntaxKind[TerminalLiteral](155,2): `ordm`
SyntaxKind[TerminalLiteral](156,2): `raquo`
SyntaxKind[TerminalLiteral](157,2): `frac14`
SyntaxKind[TerminalLiteral](158,2): `frac12`
SyntaxKind[TerminalLiteral](159,2): `frac34`
SyntaxKind[TerminalLiteral](160,2): `iquest`
SyntaxKind[TerminalLiteral](161,2): `Agrave`
SyntaxKind[TerminalLiteral](162,2): `Aacute`
SyntaxKind[TerminalLiteral](163,2): `Acirc`
SyntaxKind[TerminalLiteral](164,2): `Atilde`
SyntaxKind[TerminalLiteral](165,2): `Auml`
SyntaxKind[TerminalLiteral](166,2): `Aring`
SyntaxKind[TerminalLiteral](167,2): `AElig`
SyntaxKind[TerminalLiteral](168,2): `Ccedil`
SyntaxKind[TerminalLiteral](169,2): `Egrave`
SyntaxKind[TerminalLiteral](170,2): `Eacute`
SyntaxKind[TerminalLiteral](171,2): `Ecirc`
SyntaxKind[TerminalLiteral](172,2): `Euml`
SyntaxKind[TerminalLiteral](173,2): `Igrave`
SyntaxKind[TerminalLiteral](174,2): `Iacute`
SyntaxKind[TerminalLiteral](175,2): `Icirc`
SyntaxKind[TerminalLiteral](176,2): `Iuml`
SyntaxKind[TerminalLiteral](177,2): `ETH`
SyntaxKind[TerminalLiteral](178,2): `Ntilde`
SyntaxKind[TerminalLiteral](179,2): `Ograve`
SyntaxKind[TerminalLiteral](180,2): `Oacute`
SyntaxKind[TerminalLiteral](181,2): `Ocirc`
SyntaxKind[TerminalLiteral](182,2): `Otilde`
SyntaxKind[TerminalLiteral](183,2): `Ouml`
SyntaxKind[TerminalLiteral](184,2): `times`
SyntaxKind[TerminalLiteral](185,2): `Oslash`
SyntaxKind[TerminalLiteral](186,2): `Ugrave`
SyntaxKind[TerminalLiteral](187,2): `Uacute`
SyntaxKind[TerminalLiteral](188,2): `Ucirc`
SyntaxKind[TerminalLiteral](189,2): `Uuml`
SyntaxKind[TerminalLiteral](190,2): `Yacute`
SyntaxKind[TerminalLiteral](191,2): `THORN`
SyntaxKind[TerminalLiteral](192,2): `szlig`
SyntaxKind[TerminalLiteral](193,2): `agrave`
SyntaxKind[TerminalLiteral](194,2): `aacute`
SyntaxKind[TerminalLiteral](195,2): `acirc`
SyntaxKind[TerminalLiteral](196,2): `atilde`
SyntaxKind[TerminalLiteral](197,2): `auml`
SyntaxKind[TerminalLiteral](198,2): `aring`
SyntaxKind[TerminalLiteral](199,2): `aelig`
SyntaxKind[TerminalLiteral](200,2): `ccedil`
SyntaxKind[TerminalLiteral](201,2): `egrave`
SyntaxKind[TerminalLiteral](202,2): `eacute`
SyntaxKind[TerminalLiteral](203,2): `ecirc`
SyntaxKind[TerminalLiteral](204,2): `euml`
SyntaxKind[TerminalLiteral](205,2): `igrave`
SyntaxKind[TerminalLiteral](206,2): `iacute`
SyntaxKind[TerminalLiteral](207,2): `icirc`
SyntaxKind[TerminalLiteral](208,2): `iuml`
SyntaxKind[TerminalLiteral](209,2): `eth`
SyntaxKind[TerminalLiteral](210,2): `ntilde`
SyntaxKind[TerminalLiteral](211,2): `ograve`
SyntaxKind[TerminalLiteral](212,2): `oacute`
SyntaxKind[TerminalLiteral](213,2): `ocirc`
SyntaxKind[TerminalLiteral](214,2): `otilde`
SyntaxKind[TerminalLiteral](215,2): `ouml`
SyntaxKind[TerminalLiteral](216,2): `divide`
SyntaxKind[TerminalLiteral](217,2): `oslash`
SyntaxKind[TerminalLiteral](218,2): `ugrave`
SyntaxKind[TerminalLiteral](219,2): `uacute`
SyntaxKind[TerminalLiteral](220,2): `ucirc`
SyntaxKind[TerminalLiteral](221,2): `uuml`
SyntaxKind[TerminalLiteral](222,2): `yacute`
SyntaxKind[TerminalLiteral](223,2): `thorn`
SyntaxKind[TerminalLiteral](224,2): `yuml`
SyntaxKind[TerminalLiteral](225,2): `OElig`
SyntaxKind[TerminalLiteral](226,2): `oelig`
SyntaxKind[TerminalLiteral](227,2): `Scaron`
SyntaxKind[TerminalLiteral](228,2): `scaron`
SyntaxKind[TerminalLiteral](229,2): `Yuml`
SyntaxKind[TerminalLiteral](230,2): `fnof`
SyntaxKind[TerminalLiteral](231,2): `circ`
SyntaxKind[TerminalLiteral](232,2): `tilde`
SyntaxKind[TerminalLiteral](233,2): `Alpha`
SyntaxKind[TerminalLiteral](234,2): `Beta`
SyntaxKind[TerminalLiteral](235,2): `Gamma`
SyntaxKind[TerminalLiteral](236,2): `Delta`
SyntaxKind[TerminalLiteral](237,2): `Epsilon`
SyntaxKind[TerminalLiteral](238,2): `Zeta`
SyntaxKind[TerminalLiteral](239,2): `Eta`
SyntaxKind[TerminalLiteral](240,2): `Theta`
SyntaxKind[TerminalLiteral](241,2): `Iota`
SyntaxKind[TerminalLiteral](242,2): `Kappa`
SyntaxKind[TerminalLiteral](243,2): `Lambda`
SyntaxKind[TerminalLiteral](244,2): `Mu`
SyntaxKind[TerminalLiteral](245,2): `Nu`
SyntaxKind[TerminalLiteral](246,2): `Xi`
SyntaxKind[TerminalLiteral](247,2): `Omicron`
SyntaxKind[TerminalLiteral](248,2): `Pi`
SyntaxKind[TerminalLiteral](249,2): `Rho`
SyntaxKind[TerminalLiteral](250,2): `Sigma`
SyntaxKind[TerminalLiteral](251,2): `Tau`
SyntaxKind[TerminalLiteral](252,2): `Upsilon`
SyntaxKind[TerminalLiteral](253,2): `Phi`
SyntaxKind[TerminalLiteral](254,2): `Chi`
SyntaxKind[TerminalLiteral](255,2): `Psi`
SyntaxKind[TerminalLiteral](256,2): `Omega`
SyntaxKind[TerminalLiteral](257,2): `alpha`
SyntaxKind[TerminalLiteral](258,2): `beta`
SyntaxKind[TerminalLiteral](259,2): `gamma`
SyntaxKind[TerminalLiteral](260,2): `delta`
SyntaxKind[TerminalLiteral](261,2): `epsilon`
SyntaxKind[TerminalLiteral](262,2): `zeta`
SyntaxKind[TerminalLiteral](263,2): `eta`
SyntaxKind[TerminalLiteral](264,2): `theta`
SyntaxKind[TerminalLiteral](265,2): `iota`
SyntaxKind[TerminalLiteral](266,2): `kappa`
SyntaxKind[TerminalLiteral](267,2): `lambda`
SyntaxKind[TerminalLiteral](268,2): `mu`
SyntaxKind[TerminalLiteral](269,2): `nu`
SyntaxKind[TerminalLiteral](270,2): `xi`
SyntaxKind[TerminalLiteral](271,2): `omicron`
SyntaxKind[TerminalLiteral](272,2): `pi`
SyntaxKind[TerminalLiteral](273,2): `rho`
SyntaxKind[TerminalLiteral](274,2): `sigmaf`
SyntaxKind[TerminalLiteral](275,2): `sigma`
SyntaxKind[TerminalLiteral](276,2): `tau`
SyntaxKind[TerminalLiteral](277,2): `upsilon`
SyntaxKind[TerminalLiteral](278,2): `phi`
SyntaxKind[TerminalLiteral](279,2): `chi`
SyntaxKind[TerminalLiteral](280,2): `psi`
SyntaxKind[TerminalLiteral](281,2): `omega`
SyntaxKind[TerminalLiteral](282,2): `thetasym`
SyntaxKind[TerminalLiteral](283,2): `upsih`
SyntaxKind[TerminalLiteral](284,2): `piv`
SyntaxKind[TerminalLiteral](285,2): `ensp`
SyntaxKind[TerminalLiteral](286,2): `emsp`
SyntaxKind[TerminalLiteral](287,2): `thinsp`
SyntaxKind[TerminalLiteral](288,2): `zwnj`
SyntaxKind[TerminalLiteral](289,2): `zwj`
SyntaxKind[TerminalLiteral](290,2): `lrm`
SyntaxKind[TerminalLiteral](291,2): `rlm`
SyntaxKind[TerminalLiteral](292,2): `ndash`
SyntaxKind[TerminalLiteral](293,2): `mdash`
SyntaxKind[TerminalLiteral](294,2): `lsquo`
SyntaxKind[TerminalLiteral](295,2): `rsquo`
SyntaxKind[TerminalLiteral](296,2): `sbquo`
SyntaxKind[TerminalLiteral](297,2): `ldquo`
SyntaxKind[TerminalLiteral](298,2): `rdquo`
SyntaxKind[TerminalLiteral](299,2): `bdquo`
SyntaxKind[TerminalLiteral](300,2): `dagger`
SyntaxKind[TerminalLiteral](301,2): `Dagger`
SyntaxKind[TerminalLiteral](302,2): `bull`
SyntaxKind[TerminalLiteral](303,2): `hellip`
SyntaxKind[TerminalLiteral](304,2): `permil`
SyntaxKind[TerminalLiteral](305,2): `prime`
SyntaxKind[TerminalLiteral](306,2): `Prime`
SyntaxKind[TerminalLiteral](307,2): `lsaquo`
SyntaxKind[TerminalLiteral](308,2): `rsaquo`
SyntaxKind[TerminalLiteral](309,2): `oline`
SyntaxKind[TerminalLiteral](310,2): `frasl`
SyntaxKind[TerminalLiteral](311,2): `euro`
SyntaxKind[TerminalLiteral](312,2): `image`
SyntaxKind[TerminalLiteral](313,2): `weierp`
SyntaxKind[TerminalLiteral](314,2): `real`
SyntaxKind[TerminalLiteral](315,2): `trade`
SyntaxKind[TerminalLiteral](316,2): `alefsym`
SyntaxKind[TerminalLiteral](317,2): `larr`
SyntaxKind[TerminalLiteral](318,2): `uarr`
SyntaxKind[TerminalLiteral](319,2): `rarr`
SyntaxKind[TerminalLiteral](320,2): `darr`
SyntaxKind[TerminalLiteral](321,2): `harr`
SyntaxKind[TerminalLiteral](322,2): `crarr`
SyntaxKind[TerminalLiteral](323,2): `lArr`
SyntaxKind[TerminalLiteral](324,2): `uArr`
SyntaxKind[TerminalLiteral](325,2): `rArr`
SyntaxKind[TerminalLiteral](326,2): `dArr`
SyntaxKind[TerminalLiteral](327,2): `hArr`
SyntaxKind[TerminalLiteral](328,2): `forall`
SyntaxKind[TerminalLiteral](329,2): `part`
SyntaxKind[TerminalLiteral](330,2): `exist`
SyntaxKind[TerminalLiteral](331,2): `empty`
SyntaxKind[TerminalLiteral](332,2): `nabla`
SyntaxKind[TerminalLiteral](333,2): `isin`
SyntaxKind[TerminalLiteral](334,2): `notin`
SyntaxKind[TerminalLiteral](335,2): `ni`
SyntaxKind[TerminalLiteral](336,2): `prod`
SyntaxKind[TerminalLiteral](337,2): `sum`
SyntaxKind[TerminalLiteral](338,2): `minus`
SyntaxKind[TerminalLiteral](339,2): `lowast`
SyntaxKind[TerminalLiteral](340,2): `radic`
SyntaxKind[TerminalLiteral](341,2): `prop`
SyntaxKind[TerminalLiteral](342,2): `infin`
SyntaxKind[TerminalLiteral](343,2): `ang`
SyntaxKind[TerminalLiteral](344,2): `and`
SyntaxKind[TerminalLiteral](345,2): `or`
SyntaxKind[TerminalLiteral](346,2): `cap`
SyntaxKind[TerminalLiteral](347,2): `cup`
SyntaxKind[TerminalLiteral](348,2): `int`
SyntaxKind[TerminalLiteral](349,2): `there4`
SyntaxKind[TerminalLiteral](350,2): `sim`
SyntaxKind[TerminalLiteral](351,2): `cong`
SyntaxKind[TerminalLiteral](352,2): `asymp`
SyntaxKind[TerminalLiteral](353,2): `ne`
SyntaxKind[TerminalLiteral](354,2): `equiv`
SyntaxKind[TerminalLiteral](355,2): `le`
SyntaxKind[TerminalLiteral](356,2): `ge`
SyntaxKind[TerminalLiteral](357,2): `sub`
SyntaxKind[TerminalLiteral](358,2): `sup`
SyntaxKind[TerminalLiteral](359,2): `nsub`
SyntaxKind[TerminalLiteral](360,2): `sube`
SyntaxKind[TerminalLiteral](361,2): `supe`
SyntaxKind[TerminalLiteral](362,2): `oplus`
SyntaxKind[TerminalLiteral](363,2): `otimes`
SyntaxKind[TerminalLiteral](364,2): `perp`
SyntaxKind[TerminalLiteral](365,2): `sdot`
SyntaxKind[TerminalLiteral](366,2): `lceil`
SyntaxKind[TerminalLiteral](367,2): `rceil`
SyntaxKind[TerminalLiteral](368,2): `lfloor`
SyntaxKind[TerminalLiteral](369,2): `rfloor`
SyntaxKind[TerminalLiteral](370,2): `lang`
SyntaxKind[TerminalLiteral](371,2): `rang`
SyntaxKind[TerminalLiteral](372,2): `loz`
SyntaxKind[TerminalLiteral](373,2): `spades`
SyntaxKind[TerminalLiteral](374,2): `clubs`
SyntaxKind[TerminalLiteral](375,2): `hearts`
SyntaxKind[TerminalLiteral](376,2): `diams`
SyntaxKind[Identifier](378,1): LinkReference
SyntaxKind[ColonColonToken](378,15): ::
SyntaxKind[TerminalLiteral](379,2): `#`
SyntaxKind[Identifier](379,6): LinkReferenceChars
SyntaxKind[Identifier](381,1): LinkReferenceChars
SyntaxKind[ColonColonToken](381,20): ::
SyntaxKind[Identifier](382,2): LinkReferenceChar
SyntaxKind[Identifier](382,20): LinkReferenceChars
SyntaxKind[QuestionToken](382,38): ?
SyntaxKind[Identifier](384,1): LinkReferenceChar
SyntaxKind[ColonColonToken](384,19): ::
SyntaxKind[Identifier](385,2): SourceCharacter
SyntaxKind[ButKeyword](385,18): but
SyntaxKind[NotKeyword](385,22): not
SyntaxKind[Identifier](385,26): LineTerminator
SyntaxKind[Identifier](387,1): IdentifierName
SyntaxKind[ColonColonToken](387,16): ::
SyntaxKind[Identifier](388,2): IdentifierStart
SyntaxKind[Identifier](389,2): IdentifierName
SyntaxKind[Identifier](389,17): IdentifierPart
SyntaxKind[Identifier](391,1): IdentifierStart
SyntaxKind[ColonColonToken](391,17): ::
SyntaxKind[Identifier](392,2): UnicodeIDStart
SyntaxKind[TerminalLiteral](393,2): `_`
SyntaxKind[Identifier](395,1): IdentifierPart
SyntaxKind[ColonColonToken](395,16): ::
SyntaxKind[Identifier](396,2): UnicodeIDContinue
SyntaxKind[TerminalLiteral](397,2): `_`
SyntaxKind[UnicodeCharacterLiteral](398,2): <ZWNJ>
SyntaxKind[UnicodeCharacterLiteral](399,2): <ZWJ>
SyntaxKind[Identifier](401,1): UnicodeIDStart
SyntaxKind[ColonColonToken](401,16): ::
SyntaxKind[GreaterThanToken](402,2): >
SyntaxKind[ProseFull](402,4): any Unicode code point with the Unicode property "ID_Start" or "Other_ID_Start"
SyntaxKind[Identifier](404,1): UnicodeIDContinue
SyntaxKind[ColonColonToken](404,19): ::
SyntaxKind[GreaterThanToken](405,2): >
SyntaxKind[ProseFull](405,4): any Unicode code point with the Unicode property "ID_Continue" or "Other_ID_Continue", or "Other_ID_Start"
SyntaxKind[Identifier](407,1): ReservedWord
SyntaxKind[ColonColonToken](407,14): ::
SyntaxKind[Identifier](408,2): Keyword
SyntaxKind[Identifier](409,2): BooleanLiteral
SyntaxKind[Identifier](411,1): Keyword
SyntaxKind[ColonColonToken](411,9): ::
SyntaxKind[OneKeyword](411,12): one
SyntaxKind[OfKeyword](411,16): of
SyntaxKind[TerminalLiteral](412,2): `but`
SyntaxKind[TerminalLiteral](413,2): `define`
SyntaxKind[TerminalLiteral](414,2): `default`
SyntaxKind[TerminalLiteral](415,2): `empty`
SyntaxKind[TerminalLiteral](416,2): `goal`
SyntaxKind[TerminalLiteral](417,2): `here`
SyntaxKind[TerminalLiteral](418,2): `import`
SyntaxKind[TerminalLiteral](419,2): `lexical`
SyntaxKind[TerminalLiteral](420,2): `line`
SyntaxKind[TerminalLiteral](421,2): `lookahead`
SyntaxKind[TerminalLiteral](422,2): `no`
SyntaxKind[TerminalLiteral](423,2): `not`
SyntaxKind[TerminalLiteral](424,2): `of`
SyntaxKind[TerminalLiteral](425,2): `one`
SyntaxKind[TerminalLiteral](426,2): `or`
SyntaxKind[TerminalLiteral](427,2): `through`
SyntaxKind[Identifier](429,1): Punctuator
SyntaxKind[ColonColonToken](429,12): ::
SyntaxKind[OneKeyword](429,15): one
SyntaxKind[OfKeyword](429,19): of
SyntaxKind[TerminalLiteral](430,2): `@`
SyntaxKind[TerminalLiteral](431,2): `:`
SyntaxKind[TerminalLiteral](431,6): `::`
SyntaxKind[TerminalLiteral](431,11): `:::`
SyntaxKind[TerminalLiteral](432,2): `{`
SyntaxKind[TerminalLiteral](432,6): `}`
SyntaxKind[TerminalLiteral](432,10): `(`
SyntaxKind[TerminalLiteral](432,14): `)`
SyntaxKind[TerminalLiteral](432,18): `[`
SyntaxKind[TerminalLiteral](432,22): `]`
SyntaxKind[TerminalLiteral](433,2): `>`
SyntaxKind[TerminalLiteral](433,6): `[>`
SyntaxKind[TerminalLiteral](434,2): `,`
SyntaxKind[TerminalLiteral](435,2): `+`
SyntaxKind[TerminalLiteral](435,6): `~`
SyntaxKind[TerminalLiteral](435,10): `?`
SyntaxKind[TerminalLiteral](436,2): `==`
SyntaxKind[TerminalLiteral](436,7): `=`
SyntaxKind[TerminalLiteral](437,2): `!=`
SyntaxKind[TerminalLiteral](437,7): `≠`
SyntaxKind[TerminalLiteral](438,2): `<-`
SyntaxKind[TerminalLiteral](438,7): `∈`
SyntaxKind[TerminalLiteral](439,2): `<!`
SyntaxKind[TerminalLiteral](439,7): `∉`
SyntaxKind[Identifier](441,1): ProductionSeparator
SyntaxKind[ColonColonToken](441,21): ::
SyntaxKind[OneKeyword](441,24): one
SyntaxKind[OfKeyword](441,28): of
SyntaxKind[TerminalLiteral](442,2): `:`
SyntaxKind[TerminalLiteral](443,2): `::`
SyntaxKind[TerminalLiteral](444,2): `:::`
SyntaxKind[Identifier](446,1): BooleanLiteral
SyntaxKind[ColonColonToken](446,16): ::
SyntaxKind[TerminalLiteral](447,2): `true`
SyntaxKind[TerminalLiteral](448,2): `false`
SyntaxKind[Identifier](450,1): NumericLiteral
SyntaxKind[ColonColonToken](450,16): ::
SyntaxKind[Identifier](451,2): DecimalLiteral
SyntaxKind[Identifier](453,1): DecimalLiteral
SyntaxKind[ColonColonToken](453,16): ::
SyntaxKind[Identifier](454,2): DecimalIntegerLiteral
SyntaxKind[TerminalLiteral](454,24): `.`
SyntaxKind[Identifier](454,28): DecimalDigits
SyntaxKind[QuestionToken](454,41): ?
SyntaxKind[Identifier](454,43): ExponentPart
SyntaxKind[QuestionToken](454,55): ?
SyntaxKind[TerminalLiteral](455,2): `.`
SyntaxKind[Identifier](455,6): DecimalDigits
SyntaxKind[Identifier](455,20): ExponentPart
SyntaxKind[QuestionToken](455,32): ?
SyntaxKind[Identifier](456,2): DecimalIntegerLiteral
SyntaxKind[Identifier](456,24): ExponentPart
SyntaxKind[QuestionToken](456,36): ?
SyntaxKind[Identifier](458,1): DecimalIntegerLiteral
SyntaxKind[ColonColonToken](458,23): ::
SyntaxKind[TerminalLiteral](459,2): `0`
SyntaxKind[Identifier](460,2): NonZeroDigit
SyntaxKind[Identifier](460,15): DecimalDigits
SyntaxKind[QuestionToken](460,28): ?
SyntaxKind[Identifier](462,1): DecimalDigits
SyntaxKind[ColonColonToken](462,15): ::
SyntaxKind[Identifier](463,2): DecimalDigit
SyntaxKind[Identifier](464,2): DecimalDigits
SyntaxKind[Identifier](464,16): DecimalDigit
SyntaxKind[Identifier](466,1): DecimalDigit
SyntaxKind[ColonColonToken](466,14): ::
SyntaxKind[OneKeyword](466,17): one
SyntaxKind[OfKeyword](466,21): of
SyntaxKind[TerminalLiteral](467,2): `0`
SyntaxKind[TerminalLiteral](467,6): `1`
SyntaxKind[TerminalLiteral](467,10): `2`
SyntaxKind[TerminalLiteral](467,14): `3`
SyntaxKind[TerminalLiteral](467,18): `4`
SyntaxKind[TerminalLiteral](467,22): `5`
SyntaxKind[TerminalLiteral](467,26): `6`
SyntaxKind[TerminalLiteral](467,30): `7`
SyntaxKind[TerminalLiteral](467,34): `8`
SyntaxKind[TerminalLiteral](467,38): `9`
SyntaxKind[Identifier](469,1): NonZeroDigit
SyntaxKind[ColonColonToken](469,14): ::
SyntaxKind[OneKeyword](469,17): one
SyntaxKind[OfKeyword](469,21): of
SyntaxKind[TerminalLiteral](470,2): `1`
SyntaxKind[TerminalLiteral](470,6): `2`
SyntaxKind[TerminalLiteral](470,10): `3`
SyntaxKind[TerminalLiteral](470,14): `4`
SyntaxKind[TerminalLiteral](470,18): `5`
SyntaxKind[TerminalLiteral](470,22): `6`
SyntaxKind[TerminalLiteral](470,26): `7`
SyntaxKind[TerminalLiteral](470,30): `8`
SyntaxKind[TerminalLiteral](470,34): `9`
SyntaxKind[Identifier](472,1): ExponentPart
SyntaxKind[ColonColonToken](472,14): ::
SyntaxKind[Identifier](473,2): ExponentIndicator
SyntaxKind[Identifier](473,20): SignedInteger
SyntaxKind[Identifier](475,1): ExponentIndicator
SyntaxKind[ColonColonToken](475,19): ::
SyntaxKind[OneKeyword](475,22): one
SyntaxKind[OfKeyword](475,26): of
SyntaxKind[TerminalLiteral](476,2): `e`
SyntaxKind[TerminalLiteral](476,6): `E`
SyntaxKind[Identifier](478,1): SignedInteger
SyntaxKind[ColonColonToken](478,15): ::
SyntaxKind[Identifier](479,2): DecimalDigits
SyntaxKind[TerminalLiteral](480,2): `+`
SyntaxKind[Identifier](480,6): DecimalDigits
SyntaxKind[TerminalLiteral](481,2): `-`
SyntaxKind[Identifier](481,6): DecimalDigits
SyntaxKind[Identifier](483,1): HexDigits
SyntaxKind[ColonColonToken](483,11): ::
SyntaxKind[Identifier](484,2): HexDigit
SyntaxKind[Identifier](485,2): HexDigits
SyntaxKind[Identifier](485,12): HexDigit
SyntaxKind[Identifier](487,1): HexDigit
SyntaxKind[ColonColonToken](487,10): ::
SyntaxKind[OneKeyword](487,13): one
SyntaxKind[OfKeyword](487,17): of
SyntaxKind[TerminalLiteral](488,2): `0`
SyntaxKind[TerminalLiteral](488,6): `1`
SyntaxKind[TerminalLiteral](488,10): `2`
SyntaxKind[TerminalLiteral](488,14): `3`
SyntaxKind[TerminalLiteral](488,18): `4`
SyntaxKind[TerminalLiteral](488,22): `5`
SyntaxKind[TerminalLiteral](488,26): `6`
SyntaxKind[TerminalLiteral](488,30): `7`
SyntaxKind[TerminalLiteral](488,34): `8`
SyntaxKind[TerminalLiteral](488,38): `9`
SyntaxKind[TerminalLiteral](488,42): `a`
SyntaxKind[TerminalLiteral](488,46): `b`
SyntaxKind[TerminalLiteral](488,50): `c`
SyntaxKind[TerminalLiteral](488,54): `d`
SyntaxKind[TerminalLiteral](488,58): `e`
SyntaxKind[TerminalLiteral](488,62): `f`
SyntaxKind[TerminalLiteral](488,66): `A`
SyntaxKind[TerminalLiteral](488,70): `B`
SyntaxKind[TerminalLiteral](488,74): `C`
SyntaxKind[TerminalLiteral](488,78): `D`
SyntaxKind[TerminalLiteral](488,82): `E`
SyntaxKind[TerminalLiteral](488,86): `F`
SyntaxKind[Identifier](490,1): NonZeroHexDigit
SyntaxKind[ColonColonToken](490,17): ::
SyntaxKind[Identifier](491,2): HexDigit
SyntaxKind[ButKeyword](491,11): but
SyntaxKind[NotKeyword](491,15): not
SyntaxKind[TerminalLiteral](491,19): `0`
SyntaxKind[Identifier](493,1): StringLiteral
SyntaxKind[ColonColonToken](493,15): ::
SyntaxKind[TerminalLiteral](494,2): `"`
SyntaxKind[Identifier](494,6): DoubleStringCharacters
SyntaxKind[QuestionToken](494,28): ?
SyntaxKind[TerminalLiteral](494,30): `"`
SyntaxKind[TerminalLiteral](495,2): `'`
SyntaxKind[Identifier](495,6): SingleStringCharacters
SyntaxKind[QuestionToken](495,28): ?
SyntaxKind[TerminalLiteral](495,30): `'`
SyntaxKind[Identifier](497,1): DoubleStringCharacters
SyntaxKind[ColonColonToken](497,24): ::
SyntaxKind[Identifier](498,2): DoubleStringCharacter
SyntaxKind[Identifier](498,24): DoubleStringCharacters
SyntaxKind[QuestionToken](498,46): ?
SyntaxKind[Identifier](500,1): SingleStringCharacters
SyntaxKind[ColonColonToken](500,24): ::
SyntaxKind[Identifier](501,2): SingleStringCharacter
SyntaxKind[Identifier](501,24): SingleStringCharacters
SyntaxKind[QuestionToken](501,46): ?
SyntaxKind[Identifier](503,1): DoubleStringCharacter
SyntaxKind[ColonColonToken](503,23): ::
SyntaxKind[Identifier](504,2): SourceCharacter
SyntaxKind[ButKeyword](504,18): but
SyntaxKind[NotKeyword](504,22): not
SyntaxKind[OneKeyword](504,26): one
SyntaxKind[OfKeyword](504,30): of
SyntaxKind[TerminalLiteral](504,33): `"`
SyntaxKind[OrKeyword](504,37): or
SyntaxKind[TerminalLiteral](504,40): `\`
SyntaxKind[OrKeyword](504,44): or
SyntaxKind[Identifier](504,47): LineTerminator
SyntaxKind[TerminalLiteral](505,2): `\`
SyntaxKind[Identifier](505,6): EscapeSequence
SyntaxKind[Identifier](506,2): LineContinuation
SyntaxKind[Identifier](508,1): SingleStringCharacter
SyntaxKind[ColonColonToken](508,23): ::
SyntaxKind[Identifier](509,2): SourceCharacter
SyntaxKind[ButKeyword](509,18): but
SyntaxKind[NotKeyword](509,22): not
SyntaxKind[OneKeyword](509,26): one
SyntaxKind[OfKeyword](509,30): of
SyntaxKind[TerminalLiteral](509,33): `'`
SyntaxKind[OrKeyword](509,37): or
SyntaxKind[TerminalLiteral](509,40): `\`
SyntaxKind[OrKeyword](509,44): or
SyntaxKind[Identifier](509,47): LineTerminator
SyntaxKind[TerminalLiteral](510,2): `\`
SyntaxKind[Identifier](510,6): EscapeSequence
SyntaxKind[Identifier](511,2): LineContinuation
SyntaxKind[Identifier](513,1): LineContinuation
SyntaxKind[ColonColonToken](513,18): ::
SyntaxKind[TerminalLiteral](514,2): `\`
SyntaxKind[Identifier](514,6): LineTerminatorSequence
SyntaxKind[Identifier](516,1): EscapeSequence
SyntaxKind[ColonColonToken](516,16): ::
SyntaxKind[Identifier](517,2): CharacterEscapeSequence
SyntaxKind[TerminalLiteral](518,2): `0`
SyntaxKind[OpenBracketToken](518,6): [
SyntaxKind[LookaheadKeyword](518,7): lookahead
SyntaxKind[LessThanExclamationToken](518,17): <!
SyntaxKind[Identifier](518,20): DecimalDigit
SyntaxKind[CloseBracketToken](518,32): ]
SyntaxKind[Identifier](519,2): HexEscapeSequence
SyntaxKind[Identifier](520,2): UnicodeEscapeSequence
SyntaxKind[Identifier](522,1): CharacterEscapeSequence
SyntaxKind[ColonColonToken](522,25): ::
SyntaxKind[Identifier](523,2): SingleEscapeCharacter
SyntaxKind[Identifier](524,2): NonEscapeCharacter
SyntaxKind[Identifier](526,1): SingleEscapeCharacter
SyntaxKind[ColonColonToken](526,23): ::
SyntaxKind[OneKeyword](526,26): one
SyntaxKind[OfKeyword](526,30): of
SyntaxKind[TerminalLiteral](527,2): `'`
SyntaxKind[TerminalLiteral](527,6): `"`
SyntaxKind[TerminalLiteral](527,10): `\`
SyntaxKind[TerminalLiteral](527,14): `b`
SyntaxKind[TerminalLiteral](527,18): `f`
SyntaxKind[TerminalLiteral](527,22): `n`
SyntaxKind[TerminalLiteral](527,26): `r`
SyntaxKind[TerminalLiteral](527,30): `t`
SyntaxKind[TerminalLiteral](527,34): `v`
SyntaxKind[Identifier](529,1): NonEscapeCharacter
SyntaxKind[ColonColonToken](529,20): ::
SyntaxKind[Identifier](530,2): SourceCharacter
SyntaxKind[ButKeyword](530,18): but
SyntaxKind[NotKeyword](530,22): not
SyntaxKind[OneKeyword](530,26): one
SyntaxKind[OfKeyword](530,30): of
SyntaxKind[Identifier](530,33): EscapeCharacter
SyntaxKind[OrKeyword](530,49): or
SyntaxKind[Identifier](530,52): LineTerminator
SyntaxKind[Identifier](532,1): EscapeCharacter
SyntaxKind[ColonColonToken](532,17): ::
SyntaxKind[Identifier](533,2): SingleEscapeCharacter
SyntaxKind[Identifier](534,2): DecimalDigit
SyntaxKind[TerminalLiteral](535,2): `x`
SyntaxKind[TerminalLiteral](536,2): `u`
SyntaxKind[Identifier](538,1): HexEscapeSequence
SyntaxKind[ColonColonToken](538,19): ::
SyntaxKind[TerminalLiteral](539,2): `x`
SyntaxKind[Identifier](539,6): HexDigit
SyntaxKind[Identifier](539,15): HexDigit
SyntaxKind[Identifier](541,1): UnicodeEscapeSequence
SyntaxKind[ColonColonToken](541,23): ::
SyntaxKind[TerminalLiteral](542,2): `u`
SyntaxKind[Identifier](542,6): Hex4Digits
SyntaxKind[TerminalLiteral](543,2): `u{`
SyntaxKind[Identifier](543,7): HexDigits
SyntaxKind[TerminalLiteral](543,17): `}`
SyntaxKind[Identifier](545,1): Hex4Digits
SyntaxKind[ColonColonToken](545,12): ::
SyntaxKind[Identifier](546,2): HexDigit
SyntaxKind[Identifier](546,11): HexDigit
SyntaxKind[Identifier](546,20): HexDigit
SyntaxKind[Identifier](546,29): HexDigit
SyntaxKind[Identifier](548,1): UnicodeCharacterLiteral
SyntaxKind[ColonColonToken](548,25): ::
SyntaxKind[Identifier](549,2): UnicodeCharacterLiteralCodePoint
SyntaxKind[TerminalLiteral](550,2): `<`
SyntaxKind[Identifier](550,6): UnicodeCharacterLiteralCodePoint
SyntaxKind[Identifier](550,39): WhiteSpace
SyntaxKind[Identifier](550,50): UnicodeCharacterLiteralCodePointDescription
SyntaxKind[TerminalLiteral](550,94): `>`
SyntaxKind[TerminalLiteral](551,2): `<`
SyntaxKind[Identifier](551,6): UnicodeCharacterLiteralCharacterIdentifier
SyntaxKind[TerminalLiteral](551,49): `>`
SyntaxKind[Identifier](553,1): UnicodeCharacterLiteralCodePoint
SyntaxKind[ColonColonToken](553,34): ::
SyntaxKind[TerminalLiteral](554,2): `U+`
SyntaxKind[Identifier](554,7): UnicodeCharacterLiteralHexDigits
SyntaxKind[TerminalLiteral](555,2): `u+`
SyntaxKind[Identifier](555,7): UnicodeCharacterLiteralHexDigits
SyntaxKind[Identifier](557,1): UnicodeCharacterLiteralHexDigits
SyntaxKind[ColonColonToken](557,34): ::
SyntaxKind[Identifier](558,2): Hex4Digits
SyntaxKind[Identifier](559,2): NonZeroHexDigit
SyntaxKind[Identifier](559,18): Hex4Digits
SyntaxKind[TerminalLiteral](560,2): `10`
SyntaxKind[Identifier](560,7): Hex4Digits
SyntaxKind[Identifier](562,1): UnicodeCharacterLiteralCodePointDescription
SyntaxKind[ColonColonToken](562,45): ::
SyntaxKind[Identifier](563,2): UnicodeCharacterLiteralCodePointDescriptionChars
SyntaxKind[Identifier](565,1): UnicodeCharacterLiteralCodePointDescriptionChars
SyntaxKind[ColonColonToken](565,50): ::
SyntaxKind[Identifier](566,2): UnicodeCharacterLiteralCodePointDescriptionChar
SyntaxKind[Identifier](566,50): UnicodeCharacterLiteralCodePointDescriptionChars
SyntaxKind[QuestionToken](566,98): ?
SyntaxKind[Identifier](568,1): UnicodeCharacterLiteralCodePointDescriptionChar
SyntaxKind[ColonColonToken](568,49): ::
SyntaxKind[UnicodeCharacterLiteral](569,2): U+0020
SyntaxKind[ThroughKeyword](569,9): through
SyntaxKind[UnicodeCharacterLiteral](569,17): U+007E
SyntaxKind[ButKeyword](569,24): but
SyntaxKind[NotKeyword](569,28): not
SyntaxKind[OneKeyword](569,32): one
SyntaxKind[OfKeyword](569,36): of
SyntaxKind[TerminalLiteral](569,39): `<`
SyntaxKind[OrKeyword](569,43): or
SyntaxKind[TerminalLiteral](569,46): `>`
SyntaxKind[OrKeyword](569,50): or
SyntaxKind[TerminalLiteral](569,53): `\`
SyntaxKind[Identifier](571,1): UnicodeCharacterLiteralCharacterIdentifier
SyntaxKind[ColonColonToken](571,44): ::
SyntaxKind[Identifier](572,2): UnicodeCharacterLiteralCharacterIdentifierStart
SyntaxKind[Identifier](573,2): UnicodeCharacterLiteralCharacterIdentifier
SyntaxKind[Identifier](573,45): UnicodeCharacterLiteralCharacterIdentifierPart
SyntaxKind[Identifier](575,1): UnicodeCharacterLiteralCharacterIdentifierStart
SyntaxKind[ColonColonToken](575,49): ::
SyntaxKind[Identifier](576,2): LowerAlpha
SyntaxKind[Identifier](577,2): UpperAlpha
SyntaxKind[TerminalLiteral](578,2): `_`
SyntaxKind[Identifier](580,1): UnicodeCharacterLiteralCharacterIdentifierPart
SyntaxKind[ColonColonToken](580,48): ::
SyntaxKind[Identifier](581,2): LowerAlpha
SyntaxKind[Identifier](582,2): UpperAlpha
SyntaxKind[Identifier](583,2): DecimalDigit
SyntaxKind[TerminalLiteral](584,2): `_`
SyntaxKind[Identifier](586,1): LowerAlpha
SyntaxKind[ColonColonToken](586,12): ::
SyntaxKind[OneKeyword](586,15): one
SyntaxKind[OfKeyword](586,19): of
SyntaxKind[TerminalLiteral](587,2): `a`
SyntaxKind[TerminalLiteral](587,6): `b`
SyntaxKind[TerminalLiteral](587,10): `c`
SyntaxKind[TerminalLiteral](587,14): `d`
SyntaxKind[TerminalLiteral](587,18): `e`
SyntaxKind[TerminalLiteral](587,22): `f`
SyntaxKind[TerminalLiteral](587,26): `g`
SyntaxKind[TerminalLiteral](587,30): `h`
SyntaxKind[TerminalLiteral](587,34): `i`
SyntaxKind[TerminalLiteral](587,38): `j`
SyntaxKind[TerminalLiteral](587,42): `k`
SyntaxKind[TerminalLiteral](587,46): `l`
SyntaxKind[TerminalLiteral](587,50): `m`
SyntaxKind[TerminalLiteral](587,54): `n`
SyntaxKind[TerminalLiteral](587,58): `o`
SyntaxKind[TerminalLiteral](587,62): `p`
SyntaxKind[TerminalLiteral](587,66): `q`
SyntaxKind[TerminalLiteral](587,70): `r`
SyntaxKind[TerminalLiteral](587,74): `s`
SyntaxKind[TerminalLiteral](587,78): `t`
SyntaxKind[TerminalLiteral](587,82): `u`
SyntaxKind[TerminalLiteral](587,86): `v`
SyntaxKind[TerminalLiteral](587,90): `w`
SyntaxKind[TerminalLiteral](587,94): `x`
SyntaxKind[TerminalLiteral](587,98): `y`
SyntaxKind[TerminalLiteral](587,102): `z`
SyntaxKind[Identifier](589,1): UpperAlpha
SyntaxKind[ColonColonToken](589,12): ::
SyntaxKind[OneKeyword](589,15): one
SyntaxKind[OfKeyword](589,19): of
SyntaxKind[TerminalLiteral](590,2): `A`
SyntaxKind[TerminalLiteral](590,6): `B`
SyntaxKind[TerminalLiteral](590,10): `C`
SyntaxKind[TerminalLiteral](590,14): `D`
SyntaxKind[TerminalLiteral](590,18): `E`
SyntaxKind[TerminalLiteral](590,22): `F`
SyntaxKind[TerminalLiteral](590,26): `G`
SyntaxKind[TerminalLiteral](590,30): `H`
SyntaxKind[TerminalLiteral](590,34): `I`
SyntaxKind[TerminalLiteral](590,38): `J`
SyntaxKind[TerminalLiteral](590,42): `K`
SyntaxKind[TerminalLiteral](590,46): `L`
SyntaxKind[TerminalLiteral](590,50): `M`
SyntaxKind[TerminalLiteral](590,54): `N`
SyntaxKind[TerminalLiteral](590,58): `O`
SyntaxKind[TerminalLiteral](590,62): `P`
SyntaxKind[TerminalLiteral](590,66): `Q`
SyntaxKind[TerminalLiteral](590,70): `R`
SyntaxKind[TerminalLiteral](590,74): `S`
SyntaxKind[TerminalLiteral](590,78): `T`
SyntaxKind[TerminalLiteral](590,82): `U`
SyntaxKind[TerminalLiteral](590,86): `V`
SyntaxKind[TerminalLiteral](590,90): `W`
SyntaxKind[TerminalLiteral](590,94): `X`
SyntaxKind[TerminalLiteral](590,98): `Y`
SyntaxKind[TerminalLiteral](590,102): `Z`
SyntaxKind[Identifier](592,1): Indent
SyntaxKind[ColonColonToken](592,8): ::
SyntaxKind[GreaterThanToken](593,2): >
SyntaxKind[ProseFull](593,4): An increase in the indentation depth from the previous line.
SyntaxKind[Identifier](595,1): Dedent
SyntaxKind[ColonColonToken](595,8): ::
SyntaxKind[GreaterThanToken](596,2): >
SyntaxKind[ProseFull](596,4): A decrease in the indentation depth from the previous line.
SyntaxKind[Identifier](598,1): Terminal
SyntaxKind[ColonColonToken](598,10): ::
SyntaxKind[TerminalLiteral](599,2): ```
SyntaxKind[TerminalLiteral](599,6): ```
SyntaxKind[TerminalLiteral](599,10): ```
SyntaxKind[TerminalLiteral](600,2): ```
SyntaxKind[Identifier](600,6): TerminalChars
SyntaxKind[TerminalLiteral](600,20): ```
SyntaxKind[Identifier](602,1): TerminalChars
SyntaxKind[ColonColonToken](602,15): ::
SyntaxKind[Identifier](603,2): TerminalChar
SyntaxKind[Identifier](603,15): TerminalChars
SyntaxKind[QuestionToken](603,28): ?
SyntaxKind[Identifier](605,1): TerminalChar
SyntaxKind[ColonColonToken](605,14): ::
SyntaxKind[Identifier](606,2): SourceCharacter
SyntaxKind[ButKeyword](606,18): but
SyntaxKind[NotKeyword](606,22): not
SyntaxKind[OneKeyword](606,26): one
SyntaxKind[OfKeyword](606,30): of
SyntaxKind[TerminalLiteral](606,33): ```
SyntaxKind[OrKeyword](606,37): or
SyntaxKind[Identifier](606,40): LineTerminator
SyntaxKind[Identifier](608,1): ProseFull
SyntaxKind[OpenBracketToken](608,10): [
SyntaxKind[Identifier](608,11): MultiLine
SyntaxKind[CloseBracketToken](608,20): ]
SyntaxKind[ColonColonToken](608,22): ::
SyntaxKind[Identifier](609,2): ProseChars
SyntaxKind[OpenBracketToken](609,12): [
SyntaxKind[QuestionToken](609,13): ?
SyntaxKind[Identifier](609,14): MultiLine
SyntaxKind[CloseBracketToken](609,23): ]
SyntaxKind[OpenBracketToken](609,25): [
SyntaxKind[LookaheadKeyword](609,26): lookahead
SyntaxKind[NotAnElementOfToken](609,36): ∉
SyntaxKind[OpenBraceToken](609,38): {
SyntaxKind[TerminalLiteral](609,40): ```
SyntaxKind[CommaToken](609,43): ,
SyntaxKind[TerminalLiteral](609,45): `|`
SyntaxKind[CloseBraceToken](609,49): }
SyntaxKind[CloseBracketToken](609,50): ]
SyntaxKind[Identifier](611,1): ProseHead
SyntaxKind[OpenBracketToken](611,10): [
SyntaxKind[Identifier](611,11): MultiLine
SyntaxKind[CloseBracketToken](611,20): ]
SyntaxKind[ColonColonToken](611,22): ::
SyntaxKind[Identifier](612,2): ProseChars
SyntaxKind[OpenBracketToken](612,12): [
SyntaxKind[QuestionToken](612,13): ?
SyntaxKind[Identifier](612,14): MultiLine
SyntaxKind[CloseBracketToken](612,23): ]
SyntaxKind[OpenBracketToken](612,25): [
SyntaxKind[LookaheadKeyword](612,26): lookahead
SyntaxKind[ElementOfToken](612,36): ∈
SyntaxKind[OpenBraceToken](612,38): {
SyntaxKind[TerminalLiteral](612,40): ```
SyntaxKind[CommaToken](612,43): ,
SyntaxKind[TerminalLiteral](612,45): `|`
SyntaxKind[CloseBraceToken](612,49): }
SyntaxKind[CloseBracketToken](612,50): ]
SyntaxKind[Identifier](614,1): ProseMiddle
SyntaxKind[OpenBracketToken](614,12): [
SyntaxKind[Identifier](614,13): MultiLine
SyntaxKind[CloseBracketToken](614,22): ]
SyntaxKind[ColonColonToken](614,24): ::
SyntaxKind[Identifier](615,2): ProseChars
SyntaxKind[OpenBracketToken](615,12): [
SyntaxKind[QuestionToken](615,13): ?
SyntaxKind[Identifier](615,14): MultiLine
SyntaxKind[CloseBracketToken](615,23): ]
SyntaxKind[OpenBracketToken](615,25): [
SyntaxKind[LookaheadKeyword](615,26): lookahead
SyntaxKind[ElementOfToken](615,36): ∈
SyntaxKind[OpenBraceToken](615,38): {
SyntaxKind[TerminalLiteral](615,40): ```
SyntaxKind[CommaToken](615,43): ,
SyntaxKind[TerminalLiteral](615,45): `|`
SyntaxKind[CloseBraceToken](615,49): }
SyntaxKind[CloseBracketToken](615,50): ]
SyntaxKind[Identifier](617,1): ProseTail
SyntaxKind[OpenBracketToken](617,10): [
SyntaxKind[Identifier](617,11): MultiLine
SyntaxKind[CloseBracketToken](617,20): ]
SyntaxKind[ColonColonToken](617,22): ::
SyntaxKind[Identifier](618,2): ProseChars
SyntaxKind[OpenBracketToken](618,12): [
SyntaxKind[QuestionToken](618,13): ?
SyntaxKind[Identifier](618,14): MultiLine
SyntaxKind[CloseBracketToken](618,23): ]
SyntaxKind[OpenBracketToken](618,25): [
SyntaxKind[LookaheadKeyword](618,26): lookahead
SyntaxKind[NotAnElementOfToken](618,36): ∉
SyntaxKind[OpenBraceToken](618,38): {
SyntaxKind[TerminalLiteral](618,40): ```
SyntaxKind[CommaToken](618,43): ,
SyntaxKind[TerminalLiteral](618,45): `|`
SyntaxKind[CloseBraceToken](618,49): }
SyntaxKind[CloseBracketToken](618,50): ]
SyntaxKind[Identifier](620,1): ProseChars
SyntaxKind[OpenBracketToken](620,11): [
SyntaxKind[Identifier](620,12): MultiLine
SyntaxKind[CloseBracketToken](620,21): ]
SyntaxKind[ColonColonToken](620,23): ::
SyntaxKind[Identifier](621,2): ProseChar
SyntaxKind[OpenBracketToken](621,11): [
SyntaxKind[QuestionToken](621,12): ?
SyntaxKind[Identifier](621,13): MultiLine
SyntaxKind[CloseBracketToken](621,22): ]
SyntaxKind[Identifier](621,24): ProseChars
SyntaxKind[OpenBracketToken](621,34): [
SyntaxKind[QuestionToken](621,35): ?
SyntaxKind[Identifier](621,36): MultiLine
SyntaxKind[CloseBracketToken](621,45): ]
SyntaxKind[QuestionToken](621,46): ?
SyntaxKind[Identifier](623,1): ProseChar
SyntaxKind[OpenBracketToken](623,10): [
SyntaxKind[Identifier](623,11): MultiLine
SyntaxKind[CloseBracketToken](623,20): ]
SyntaxKind[ColonColonToken](623,22): ::
SyntaxKind[OpenBracketToken](624,2): [
SyntaxKind[PlusToken](624,3): +
SyntaxKind[Identifier](624,4): MultiLine
SyntaxKind[CloseBracketToken](624,13): ]
SyntaxKind[Identifier](624,15): LineTerminator
SyntaxKind[TerminalLiteral](624,30): `>`
SyntaxKind[OpenBracketToken](625,2): [
SyntaxKind[PlusToken](625,3): +
SyntaxKind[Identifier](625,4): MultiLine
SyntaxKind[CloseBracketToken](625,13): ]
SyntaxKind[Identifier](625,15): SourceCharacter
SyntaxKind[ButKeyword](625,31): but
SyntaxKind[NotKeyword](625,35): not
SyntaxKind[OneKeyword](625,39): one
SyntaxKind[OfKeyword](625,43): of
SyntaxKind[TerminalLiteral](625,46): ```
SyntaxKind[OrKeyword](625,50): or
SyntaxKind[TerminalLiteral](625,53): `|`
SyntaxKind[OrKeyword](625,57): or
SyntaxKind[Identifier](625,60): LineTerminator
SyntaxKind[OpenBracketToken](626,2): [
SyntaxKind[TildeToken](626,3): ~
SyntaxKind[Identifier](626,4): MultiLine
SyntaxKind[CloseBracketToken](626,13): ]
SyntaxKind[Identifier](626,15): SourceCharacter
SyntaxKind[ButKeyword](626,31): but
SyntaxKind[NotKeyword](626,35): not
SyntaxKind[OneKeyword](626,39): one
SyntaxKind[OfKeyword](626,43): of
SyntaxKind[TerminalLiteral](626,46): ```
SyntaxKind[OrKeyword](626,50): or
SyntaxKind[TerminalLiteral](626,53): `|`
SyntaxKind[OrKeyword](626,57): or
SyntaxKind[TerminalLiteral](626,60): `]`
SyntaxKind[Identifier](631,1): Identifier
SyntaxKind[ColonToken](631,12): :
SyntaxKind[Identifier](632,2): IdentifierName
SyntaxKind[ButKeyword](632,17): but
SyntaxKind[NotKeyword](632,21): not
SyntaxKind[Identifier](632,25): ReservedWord
SyntaxKind[Identifier](634,1): Argument
SyntaxKind[ColonToken](634,10): :
SyntaxKind[TerminalLiteral](635,2): `+`
SyntaxKind[Identifier](635,6): Identifier
SyntaxKind[TerminalLiteral](636,2): `~`
SyntaxKind[Identifier](636,6): Identifier
SyntaxKind[TerminalLiteral](637,2): `?`
SyntaxKind[Identifier](637,6): Identifier
SyntaxKind[Identifier](639,1): Arguments
SyntaxKind[ColonToken](639,11): :
SyntaxKind[TerminalLiteral](640,2): `[`
SyntaxKind[TerminalLiteral](640,6): `]`
SyntaxKind[TerminalLiteral](641,2): `[`
SyntaxKind[Identifier](641,6): ArgumentList
SyntaxKind[TerminalLiteral](641,19): `]`
SyntaxKind[Identifier](643,1): ArgumentList
SyntaxKind[ColonToken](643,14): :
SyntaxKind[Identifier](644,2): Argument
SyntaxKind[Identifier](645,2): ArgumentList
SyntaxKind[TerminalLiteral](645,15): `,`
SyntaxKind[Identifier](645,19): Argument
SyntaxKind[Identifier](647,1): PrimarySymbol
SyntaxKind[ColonToken](647,15): :
SyntaxKind[Identifier](648,2): Terminal
SyntaxKind[Identifier](649,2): UnicodeCharacterLiteral
SyntaxKind[Identifier](650,2): Nonterminal
SyntaxKind[Identifier](652,1): Nonterminal
SyntaxKind[ColonToken](652,13): :
SyntaxKind[Identifier](653,2): Identifier
SyntaxKind[Identifier](653,13): Arguments
SyntaxKind[QuestionToken](653,22): ?
SyntaxKind[Identifier](655,1): OptionalSymbol
SyntaxKind[ColonToken](655,16): :
SyntaxKind[Identifier](656,2): PrimarySymbol
SyntaxKind[TerminalLiteral](656,16): `?`
SyntaxKind[QuestionToken](656,19): ?
SyntaxKind[Identifier](658,1): OrClause
SyntaxKind[ColonToken](658,10): :
SyntaxKind[Identifier](659,2): PrimarySymbol
SyntaxKind[Identifier](660,2): OrClause
SyntaxKind[TerminalLiteral](660,11): `or`
SyntaxKind[Identifier](660,16): PrimarySymbol
SyntaxKind[Identifier](662,1): OneOfSymbol
SyntaxKind[ColonToken](662,13): :
SyntaxKind[Identifier](663,2): PrimarySymbol
SyntaxKind[TerminalLiteral](664,2): `one`
SyntaxKind[TerminalLiteral](664,8): `of`
SyntaxKind[Identifier](664,13): OrClause
SyntaxKind[Identifier](666,1): UnarySymbol
SyntaxKind[ColonToken](666,13): :
SyntaxKind[Identifier](667,2): OneOfSymbol
SyntaxKind[Identifier](669,1): ButNotSymbol
SyntaxKind[ColonToken](669,14): :
SyntaxKind[Identifier](670,2): UnarySymbol
SyntaxKind[TerminalLiteral](670,14): `but`
SyntaxKind[TerminalLiteral](670,20): `not`
SyntaxKind[Identifier](670,26): UnarySymbol
SyntaxKind[Identifier](672,1): BinarySymbol
SyntaxKind[ColonToken](672,14): :
SyntaxKind[Identifier](673,2): ButNotSymbol
SyntaxKind[Identifier](674,2): UnarySymbol
SyntaxKind[Identifier](676,1): SymbolList
SyntaxKind[ColonToken](676,12): :
SyntaxKind[Identifier](677,2): PrimarySymbol
SyntaxKind[Identifier](678,2): SymbolList
SyntaxKind[TerminalLiteral](678,13): `,`
SyntaxKind[Identifier](678,17): PrimarySymbol
SyntaxKind[Identifier](680,1): SymbolSet
SyntaxKind[ColonToken](680,11): :
SyntaxKind[TerminalLiteral](681,2): `{`
SyntaxKind[Identifier](681,6): SymbolList
SyntaxKind[TerminalLiteral](681,17): `}`
SyntaxKind[Identifier](683,1): EmptyAssertionClause
SyntaxKind[ColonToken](683,22): :
SyntaxKind[TerminalLiteral](684,2): `empty`
SyntaxKind[Identifier](686,1): LookaheadEqualsAssertionClause
SyntaxKind[ColonToken](686,32): :
SyntaxKind[TerminalLiteral](687,2): `lookahead`
SyntaxKind[TerminalLiteral](687,14): `==`
SyntaxKind[Identifier](687,19): PrimarySymbol
SyntaxKind[TerminalLiteral](688,2): `lookahead`
SyntaxKind[TerminalLiteral](688,14): `=`
SyntaxKind[Identifier](688,18): PrimarySymbol
SyntaxKind[Identifier](690,1): LookaheadNotEqualsAssertionClause
SyntaxKind[ColonToken](690,35): :
SyntaxKind[TerminalLiteral](691,2): `lookahead`
SyntaxKind[TerminalLiteral](691,14): `!=`
SyntaxKind[Identifier](691,19): PrimarySymbol
SyntaxKind[TerminalLiteral](692,2): `lookahead`
SyntaxKind[TerminalLiteral](692,14): `≠`
SyntaxKind[Identifier](692,18): PrimarySymbol
SyntaxKind[Identifier](694,1): LookaheadInAssertionClause
SyntaxKind[ColonToken](694,28): :
SyntaxKind[TerminalLiteral](695,2): `lookahead`
SyntaxKind[TerminalLiteral](695,14): `<-`
SyntaxKind[Identifier](695,19): SymbolSet
SyntaxKind[TerminalLiteral](696,2): `lookahead`
SyntaxKind[TerminalLiteral](696,14): `∈`
SyntaxKind[Identifier](696,18): SymbolSet
SyntaxKind[Identifier](698,1): LookaheadNotInAssertionClause
SyntaxKind[ColonToken](698,31): :
SyntaxKind[TerminalLiteral](699,2): `lookahead`
SyntaxKind[TerminalLiteral](699,14): `<!`
SyntaxKind[Identifier](699,19): SymbolSet
SyntaxKind[TerminalLiteral](700,2): `lookahead`
SyntaxKind[TerminalLiteral](700,14): `∉`
SyntaxKind[Identifier](700,18): SymbolSet
SyntaxKind[Identifier](702,1): LookaheadAssertionClause
SyntaxKind[ColonToken](702,26): :
SyntaxKind[Identifier](703,2): LookaheadEqualsAssertionClause
SyntaxKind[Identifier](704,2): LookaheadNotEqualsAssertionClause
SyntaxKind[Identifier](705,2): LookaheadInAssertionClause
SyntaxKind[Identifier](706,2): LookaheadNotInAssertionClause
SyntaxKind[Identifier](708,1): NoSymbolAssertionClause
SyntaxKind[ColonToken](708,25): :
SyntaxKind[TerminalLiteral](709,2): `no`
SyntaxKind[Identifier](709,7): OrClause
SyntaxKind[TerminalLiteral](709,16): `here`
SyntaxKind[Identifier](711,1): LexicalGoalAssertionClause
SyntaxKind[ColonToken](711,28): :
SyntaxKind[TerminalLiteral](712,2): `lexical`
SyntaxKind[TerminalLiteral](712,12): `goal`
SyntaxKind[Identifier](712,19): PrimarySymbol
SyntaxKind[Identifier](714,1): AssertionClause
SyntaxKind[ColonToken](714,17): :
SyntaxKind[Identifier](715,2): EmptyAssertionClause
SyntaxKind[Identifier](716,2): LookaheadAssertionClause
SyntaxKind[Identifier](717,2): NoSymbolAssertionClause
SyntaxKind[Identifier](718,2): LexicalGoalAssertionClause
SyntaxKind[Identifier](720,1): Assertion
SyntaxKind[ColonToken](720,11): :
SyntaxKind[TerminalLiteral](721,2): `[`
SyntaxKind[OpenBracketToken](721,6): [
SyntaxKind[LookaheadKeyword](721,7): lookahead
SyntaxKind[NotAnElementOfToken](721,17): ∉
SyntaxKind[OpenBraceToken](721,19): {
SyntaxKind[TerminalLiteral](721,21): `~`
SyntaxKind[CommaToken](721,24): ,
SyntaxKind[TerminalLiteral](721,26): `+`
SyntaxKind[CloseBraceToken](721,30): }
SyntaxKind[CloseBracketToken](721,31): ]
SyntaxKind[Identifier](721,33): AssertionClause
SyntaxKind[TerminalLiteral](721,49): `]`
SyntaxKind[Identifier](722,2): ProseAssertion
SyntaxKind[Identifier](724,1): Prose
SyntaxKind[ColonToken](724,7): :
SyntaxKind[TerminalLiteral](725,2): `>`
SyntaxKind[Identifier](725,6): ProseFull
SyntaxKind[OpenBracketToken](725,15): [
SyntaxKind[PlusToken](725,16): +
SyntaxKind[Identifier](725,17): MultiLine
SyntaxKind[CloseBracketToken](725,26): ]
SyntaxKind[TerminalLiteral](726,2): `>`
SyntaxKind[Identifier](726,6): ProseHead
SyntaxKind[OpenBracketToken](726,15): [
SyntaxKind[PlusToken](726,16): +
SyntaxKind[Identifier](726,17): MultiLine
SyntaxKind[CloseBracketToken](726,26): ]
SyntaxKind[Identifier](726,28): ProseFragment
SyntaxKind[Identifier](726,42): ProseSpans
SyntaxKind[OpenBracketToken](726,52): [
SyntaxKind[PlusToken](726,53): +
SyntaxKind[Identifier](726,54): MultiLine
SyntaxKind[CloseBracketToken](726,63): ]
SyntaxKind[Identifier](728,1): ProseAssertion
SyntaxKind[ColonToken](728,16): :
SyntaxKind[TerminalLiteral](729,2): `[>`
SyntaxKind[Identifier](729,7): ProseFull
SyntaxKind[OpenBracketToken](729,16): [
SyntaxKind[TildeToken](729,17): ~
SyntaxKind[Identifier](729,18): MultiLine
SyntaxKind[CloseBracketToken](729,27): ]
SyntaxKind[TerminalLiteral](729,29): `]`
SyntaxKind[TerminalLiteral](730,2): `[>`
SyntaxKind[Identifier](730,7): ProseHead
SyntaxKind[OpenBracketToken](730,16): [
SyntaxKind[TildeToken](730,17): ~
SyntaxKind[Identifier](730,18): MultiLine
SyntaxKind[CloseBracketToken](730,27): ]
SyntaxKind[Identifier](730,29): ProseFragment
SyntaxKind[Identifier](730,43): ProseSpans
SyntaxKind[OpenBracketToken](730,53): [
SyntaxKind[TildeToken](730,54): ~
SyntaxKind[Identifier](730,55): MultiLine
SyntaxKind[CloseBracketToken](730,64): ]
SyntaxKind[TerminalLiteral](730,66): `]`
SyntaxKind[Identifier](732,1): ProseFragment
SyntaxKind[ColonToken](732,15): :
SyntaxKind[Identifier](733,2): Terminal
SyntaxKind[TerminalLiteral](734,2): `|`
SyntaxKind[Identifier](734,6): Identifier
SyntaxKind[TerminalLiteral](734,17): `|`
SyntaxKind[Identifier](736,1): ProseSpans
SyntaxKind[OpenBracketToken](736,11): [
SyntaxKind[Identifier](736,12): MultiLine
SyntaxKind[CloseBracketToken](736,21): ]
SyntaxKind[ColonToken](736,23): :
SyntaxKind[Identifier](737,2): ProseTail
SyntaxKind[OpenBracketToken](737,11): [
SyntaxKind[QuestionToken](737,12): ?
SyntaxKind[Identifier](737,13): MultiLine
SyntaxKind[CloseBracketToken](737,22): ]
SyntaxKind[Identifier](738,2): ProseMiddleList
SyntaxKind[OpenBracketToken](738,17): [
SyntaxKind[QuestionToken](738,18): ?
SyntaxKind[Identifier](738,19): MultiLine
SyntaxKind[CloseBracketToken](738,28): ]
SyntaxKind[Identifier](738,30): ProseTail
SyntaxKind[OpenBracketToken](738,39): [
SyntaxKind[QuestionToken](738,40): ?
SyntaxKind[Identifier](738,41): MultiLine
SyntaxKind[CloseBracketToken](738,50): ]
SyntaxKind[Identifier](740,1): ProseMiddleList
SyntaxKind[OpenBracketToken](740,16): [
SyntaxKind[Identifier](740,17): MultiLine
SyntaxKind[CloseBracketToken](740,26): ]
SyntaxKind[ColonToken](740,28): :
SyntaxKind[Identifier](741,2): ProseMiddle
SyntaxKind[OpenBracketToken](741,13): [
SyntaxKind[QuestionToken](741,14): ?
SyntaxKind[Identifier](741,15): MultiLine
SyntaxKind[CloseBracketToken](741,24): ]
SyntaxKind[Identifier](741,26): ProseFragment
SyntaxKind[Identifier](742,2): ProseMiddleList
SyntaxKind[OpenBracketToken](742,17): [
SyntaxKind[QuestionToken](742,18): ?
SyntaxKind[Identifier](742,19): MultiLine
SyntaxKind[CloseBracketToken](742,28): ]
SyntaxKind[Identifier](742,30): ProseMiddle
SyntaxKind[OpenBracketToken](742,41): [
SyntaxKind[QuestionToken](742,42): ?
SyntaxKind[Identifier](742,43): MultiLine
SyntaxKind[CloseBracketToken](742,52): ]
SyntaxKind[Identifier](742,54): ProseFragment
SyntaxKind[Identifier](744,1): Symbol
SyntaxKind[ColonToken](744,8): :
SyntaxKind[Identifier](745,2): Assertion
SyntaxKind[Identifier](746,2): BinarySymbol
SyntaxKind[Identifier](748,1): SymbolSpan
SyntaxKind[ColonToken](748,12): :
SyntaxKind[Identifier](749,2): Prose
SyntaxKind[Identifier](750,2): SymbolSpanRest
SyntaxKind[Identifier](752,1): SymbolSpanRest
SyntaxKind[ColonToken](752,16): :
SyntaxKind[Identifier](753,2): Symbol
SyntaxKind[Identifier](753,9): SymbolSpanRest
SyntaxKind[QuestionToken](753,23): ?
SyntaxKind[Identifier](755,1): RightHandSideList
SyntaxKind[ColonToken](755,19): :
SyntaxKind[Identifier](756,2): RightHandSide
SyntaxKind[Identifier](756,16): RightHandSideList
SyntaxKind[QuestionToken](756,33): ?
SyntaxKind[Identifier](758,1): RightHandSide
SyntaxKind[ColonToken](758,15): :
SyntaxKind[Identifier](759,2): Constraints
SyntaxKind[QuestionToken](759,13): ?
SyntaxKind[Identifier](759,15): SymbolSpan
SyntaxKind[Identifier](759,26): LinkReference
SyntaxKind[QuestionToken](759,39): ?
SyntaxKind[Identifier](759,41): LineTerminator
SyntaxKind[Identifier](761,1): Constraints
SyntaxKind[ColonToken](761,13): :
SyntaxKind[TerminalLiteral](762,2): `[`
SyntaxKind[OpenBracketToken](762,6): [
SyntaxKind[LookaheadKeyword](762,7): lookahead
SyntaxKind[ElementOfToken](762,17): ∈
SyntaxKind[OpenBraceToken](762,19): {
SyntaxKind[TerminalLiteral](762,21): `~`
SyntaxKind[CommaToken](762,24): ,
SyntaxKind[TerminalLiteral](762,26): `+`
SyntaxKind[CloseBraceToken](762,30): }
SyntaxKind[CloseBracketToken](762,31): ]
SyntaxKind[Identifier](762,33): ConstraintList
SyntaxKind[TerminalLiteral](762,48): `]`
SyntaxKind[Identifier](764,1): ConstraintList
SyntaxKind[ColonToken](764,16): :
SyntaxKind[Identifier](765,2): Constraint
SyntaxKind[Identifier](766,2): ConstraintList
SyntaxKind[TerminalLiteral](766,17): `,`
SyntaxKind[Identifier](766,21): Constraint
SyntaxKind[Identifier](768,1): Constraint
SyntaxKind[ColonToken](768,12): :
SyntaxKind[TerminalLiteral](769,2): `+`
SyntaxKind[Identifier](769,6): Identifier
SyntaxKind[TerminalLiteral](770,2): `~`
SyntaxKind[Identifier](770,6): Identifier
SyntaxKind[Identifier](772,1): Terminals
SyntaxKind[ColonToken](772,11): :
SyntaxKind[Identifier](773,2): Terminal
SyntaxKind[Identifier](773,11): Terminals
SyntaxKind[QuestionToken](773,20): ?
SyntaxKind[Identifier](775,1): TerminalList
SyntaxKind[ColonToken](775,14): :
SyntaxKind[Identifier](776,2): Terminals
SyntaxKind[Identifier](777,2): TerminalList
SyntaxKind[Identifier](777,15): LineTerminator
SyntaxKind[Identifier](777,30): Terminals
SyntaxKind[Identifier](779,1): OneOfList
SyntaxKind[ColonToken](779,11): :
SyntaxKind[TerminalLiteral](780,2): `one`
SyntaxKind[TerminalLiteral](780,8): `of`
SyntaxKind[Identifier](780,13): Terminals
SyntaxKind[TerminalLiteral](781,2): `one`
SyntaxKind[TerminalLiteral](781,8): `of`
SyntaxKind[Identifier](781,13): LineTerminator
SyntaxKind[Identifier](781,28): Indent
SyntaxKind[Identifier](781,35): TerminalList
SyntaxKind[Identifier](781,48): Dedent
SyntaxKind[Identifier](783,1): Parameter
SyntaxKind[ColonToken](783,11): :
SyntaxKind[Identifier](784,2): Identifier
SyntaxKind[Identifier](786,1): ParameterList
SyntaxKind[ColonToken](786,15): :
SyntaxKind[Identifier](787,2): Parameter
SyntaxKind[Identifier](788,2): ParameterList
SyntaxKind[TerminalLiteral](788,16): `,`
SyntaxKind[Identifier](788,20): Parameter
SyntaxKind[Identifier](790,1): Parameters
SyntaxKind[ColonToken](790,12): :
SyntaxKind[TerminalLiteral](791,2): `[`
SyntaxKind[Identifier](791,6): ParameterList
SyntaxKind[TerminalLiteral](791,20): `]`
SyntaxKind[Identifier](793,1): Production
SyntaxKind[ColonToken](793,12): :
SyntaxKind[Identifier](794,2): Identifier
SyntaxKind[Identifier](794,13): Parameters
SyntaxKind[QuestionToken](794,23): ?
SyntaxKind[Identifier](794,25): ProductionSeparator
SyntaxKind[Identifier](794,45): Body
SyntaxKind[Identifier](796,1): Body
SyntaxKind[ColonToken](796,6): :
SyntaxKind[Identifier](797,2): OneOfList
SyntaxKind[Identifier](798,2): RightHandSide
SyntaxKind[Identifier](799,2): LineTerminator
SyntaxKind[Identifier](799,17): Indent
SyntaxKind[Identifier](799,24): RightHandSideList
SyntaxKind[Identifier](799,42): Dedent
SyntaxKind[Identifier](801,1): Import
SyntaxKind[ColonToken](801,8): :
SyntaxKind[TerminalLiteral](802,2): `@`
SyntaxKind[TerminalLiteral](802,6): `import`
SyntaxKind[Identifier](802,15): StringLiteral
SyntaxKind[Identifier](804,1): Define
SyntaxKind[ColonToken](804,8): :
SyntaxKind[TerminalLiteral](805,2): `@`
SyntaxKind[TerminalLiteral](805,6): `define`
SyntaxKind[Identifier](805,15): Identifier
SyntaxKind[TerminalLiteral](805,26): `default`
SyntaxKind[TerminalLiteral](806,2): `@`
SyntaxKind[TerminalLiteral](806,6): `define`
SyntaxKind[Identifier](806,15): Identifier
SyntaxKind[Identifier](806,26): BooleanLiteral
SyntaxKind[Identifier](808,1): Line
SyntaxKind[ColonToken](808,6): :
SyntaxKind[TerminalLiteral](809,2): `@`
SyntaxKind[TerminalLiteral](809,6): `line`
SyntaxKind[TerminalLiteral](809,13): `default`
SyntaxKind[TerminalLiteral](810,2): `@`
SyntaxKind[TerminalLiteral](810,6): `line`
SyntaxKind[Identifier](810,13): NumericLiteral
SyntaxKind[Identifier](810,28): StringLiteral
SyntaxKind[Identifier](812,1): MetaElement
SyntaxKind[ColonToken](812,13): :
SyntaxKind[Identifier](813,2): Import
SyntaxKind[Identifier](814,2): Define
SyntaxKind[Identifier](815,2): Line
SyntaxKind[Identifier](817,1): SourceElement
SyntaxKind[ColonToken](817,15): :
SyntaxKind[OpenBracketToken](818,2): [
SyntaxKind[EmptyKeyword](818,3): empty
SyntaxKind[CloseBracketToken](818,8): ]
SyntaxKind[Identifier](819,2): Production
SyntaxKind[Identifier](820,2): MetaElement
SyntaxKind[Identifier](822,1): SourceElements
SyntaxKind[ColonToken](822,16): :
SyntaxKind[Identifier](823,2): SourceElement
SyntaxKind[Identifier](823,16): SourceElements
SyntaxKind[QuestionToken](823,30): ?
SyntaxKind[Identifier](825,1): SourceFile
SyntaxKind[ColonToken](825,12): :
SyntaxKind[Identifier](826,2): SourceElements
SyntaxKind[EndOfFileToken](827,1): «EndOfFileToken»
