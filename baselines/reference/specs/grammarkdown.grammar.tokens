/// specs/grammarkdown.grammar:
SyntaxKind[Identifier](4,1): SourceCharacter
SyntaxKind[ColonColonToken](4,17): ::
SyntaxKind[GreaterThanToken](5,2): >
SyntaxKind[ProseFull](5,4): any Unicode code point
SyntaxKind[Identifier](7,1): LineTerminator
SyntaxKind[ColonColonToken](7,16): ::
SyntaxKind[UnicodeCharacterLiteral](8,2): <LF>
SyntaxKind[UnicodeCharacterLiteral](9,2): <CR>
SyntaxKind[UnicodeCharacterLiteral](10,2): <LS>
SyntaxKind[UnicodeCharacterLiteral](11,2): <PS>
SyntaxKind[Identifier](13,1): LineTerminatorSequence
SyntaxKind[ColonColonToken](13,24): ::
SyntaxKind[UnicodeCharacterLiteral](14,2): <LF>
SyntaxKind[UnicodeCharacterLiteral](15,2): <CR>
SyntaxKind[OpenBracketToken](15,7): [
SyntaxKind[LookaheadKeyword](15,8): lookahead
SyntaxKind[ExclamationEqualsToken](15,18): !=
SyntaxKind[UnicodeCharacterLiteral](15,21): <LF>
SyntaxKind[CloseBracketToken](15,25): ]
SyntaxKind[UnicodeCharacterLiteral](16,2): <LS>
SyntaxKind[UnicodeCharacterLiteral](17,2): <PS>
SyntaxKind[UnicodeCharacterLiteral](18,2): <CR>
SyntaxKind[UnicodeCharacterLiteral](18,7): <LF>
SyntaxKind[Identifier](20,1): IdentifierName
SyntaxKind[ColonColonToken](20,16): ::
SyntaxKind[Identifier](21,2): IdentifierStart
SyntaxKind[Identifier](22,2): IdentifierName
SyntaxKind[Identifier](22,17): IdentifierPart
SyntaxKind[Identifier](24,1): IdentifierStart
SyntaxKind[ColonColonToken](24,17): ::
SyntaxKind[Identifier](25,2): UnicodeIDStart
SyntaxKind[TerminalLiteral](26,2): `_`
SyntaxKind[Identifier](28,1): IdentifierPart
SyntaxKind[ColonColonToken](28,16): ::
SyntaxKind[Identifier](29,2): UnicodeIDContinue
SyntaxKind[TerminalLiteral](30,2): `_`
SyntaxKind[UnicodeCharacterLiteral](31,2): <ZWNJ>
SyntaxKind[UnicodeCharacterLiteral](32,2): <ZWJ>
SyntaxKind[Identifier](34,1): UnicodeIDStart
SyntaxKind[ColonColonToken](34,16): ::
SyntaxKind[GreaterThanToken](35,2): >
SyntaxKind[ProseFull](35,4): any Unicode code point with the Unicode property "ID_Start" or "Other_ID_Start"
SyntaxKind[Identifier](37,1): UnicodeIDContinue
SyntaxKind[ColonColonToken](37,19): ::
SyntaxKind[GreaterThanToken](38,2): >
SyntaxKind[ProseFull](38,4): any Unicode code point with the Unicode property "ID_Continue" or "Other_ID_Continue", or "Other_ID_Start"
SyntaxKind[Identifier](40,1): ReservedWord
SyntaxKind[ColonColonToken](40,14): ::
SyntaxKind[Identifier](41,2): Keyword
SyntaxKind[Identifier](43,1): Keyword
SyntaxKind[ColonColonToken](43,9): ::
SyntaxKind[OneKeyword](43,12): one
SyntaxKind[OfKeyword](43,16): of
SyntaxKind[TerminalLiteral](44,2): `empty`
SyntaxKind[TerminalLiteral](45,2): `lookahead`
SyntaxKind[TerminalLiteral](46,2): `lexical`
SyntaxKind[TerminalLiteral](47,2): `goal`
SyntaxKind[TerminalLiteral](48,2): `no`
SyntaxKind[TerminalLiteral](49,2): `here`
SyntaxKind[TerminalLiteral](50,2): `one`
SyntaxKind[TerminalLiteral](51,2): `of`
SyntaxKind[TerminalLiteral](52,2): `or`
SyntaxKind[TerminalLiteral](53,2): `but`
SyntaxKind[TerminalLiteral](54,2): `not`
SyntaxKind[Identifier](56,1): DecimalDigit
SyntaxKind[ColonColonToken](56,14): ::
SyntaxKind[OneKeyword](56,17): one
SyntaxKind[OfKeyword](56,21): of
SyntaxKind[TerminalLiteral](57,2): `0`
SyntaxKind[TerminalLiteral](57,6): `1`
SyntaxKind[TerminalLiteral](57,10): `2`
SyntaxKind[TerminalLiteral](57,14): `3`
SyntaxKind[TerminalLiteral](57,18): `4`
SyntaxKind[TerminalLiteral](57,22): `5`
SyntaxKind[TerminalLiteral](57,26): `6`
SyntaxKind[TerminalLiteral](57,30): `7`
SyntaxKind[TerminalLiteral](57,34): `8`
SyntaxKind[TerminalLiteral](57,38): `9`
SyntaxKind[Identifier](59,1): HexDigits
SyntaxKind[ColonColonToken](59,11): ::
SyntaxKind[Identifier](60,2): HexDigit
SyntaxKind[Identifier](61,2): HexDigits
SyntaxKind[Identifier](61,12): HexDigit
SyntaxKind[Identifier](63,1): HexDigit
SyntaxKind[ColonColonToken](63,10): ::
SyntaxKind[OneKeyword](63,13): one
SyntaxKind[OfKeyword](63,17): of
SyntaxKind[TerminalLiteral](64,2): `0`
SyntaxKind[TerminalLiteral](64,6): `1`
SyntaxKind[TerminalLiteral](64,10): `2`
SyntaxKind[TerminalLiteral](64,14): `3`
SyntaxKind[TerminalLiteral](64,18): `4`
SyntaxKind[TerminalLiteral](64,22): `5`
SyntaxKind[TerminalLiteral](64,26): `6`
SyntaxKind[TerminalLiteral](64,30): `7`
SyntaxKind[TerminalLiteral](64,34): `8`
SyntaxKind[TerminalLiteral](64,38): `9`
SyntaxKind[TerminalLiteral](64,42): `a`
SyntaxKind[TerminalLiteral](64,46): `b`
SyntaxKind[TerminalLiteral](64,50): `c`
SyntaxKind[TerminalLiteral](64,54): `d`
SyntaxKind[TerminalLiteral](64,58): `e`
SyntaxKind[TerminalLiteral](64,62): `f`
SyntaxKind[TerminalLiteral](64,66): `A`
SyntaxKind[TerminalLiteral](64,70): `B`
SyntaxKind[TerminalLiteral](64,74): `C`
SyntaxKind[TerminalLiteral](64,78): `D`
SyntaxKind[TerminalLiteral](64,82): `E`
SyntaxKind[TerminalLiteral](64,86): `F`
SyntaxKind[Identifier](66,1): NonZeroHexDigit
SyntaxKind[ColonColonToken](66,17): ::
SyntaxKind[Identifier](67,2): HexDigit
SyntaxKind[ButKeyword](67,11): but
SyntaxKind[NotKeyword](67,15): not
SyntaxKind[TerminalLiteral](67,19): `0`
SyntaxKind[Identifier](69,1): UnicodeCharacterLiteral
SyntaxKind[ColonColonToken](69,25): ::
SyntaxKind[TerminalLiteral](70,2): `<`
SyntaxKind[Identifier](70,6): UnicodeCharacterLiteralChars
SyntaxKind[TerminalLiteral](70,35): `>`
SyntaxKind[TerminalLiteral](71,2): `U+`
SyntaxKind[Identifier](71,7): UnicodeCharacterLiteralHexDigits
SyntaxKind[TerminalLiteral](72,2): `u+`
SyntaxKind[Identifier](72,7): UnicodeCharacterLiteralHexDigits
SyntaxKind[Identifier](74,1): UnicodeCharacterLiteralHexDigits
SyntaxKind[ColonColonToken](74,34): ::
SyntaxKind[Identifier](75,2): Hex4Digits
SyntaxKind[Identifier](76,2): NonZeroHexDigit
SyntaxKind[Identifier](76,18): Hex4Digits
SyntaxKind[TerminalLiteral](77,2): `10`
SyntaxKind[Identifier](77,7): Hex4Digits
SyntaxKind[Identifier](79,1): UnicodeCharacterLiteralChars
SyntaxKind[ColonColonToken](79,30): ::
SyntaxKind[Identifier](80,2): UnicodeCharacterLiteralChar
SyntaxKind[Identifier](80,30): UnicodeCharacterLiteralChars
SyntaxKind[QuestionToken](80,58): ?
SyntaxKind[Identifier](82,1): UnicodeCharacterLiteralChar
SyntaxKind[ColonColonToken](82,29): ::
SyntaxKind[Identifier](83,2): SourceCharacter
SyntaxKind[ButKeyword](83,18): but
SyntaxKind[NotKeyword](83,22): not
SyntaxKind[OneKeyword](83,26): one
SyntaxKind[OfKeyword](83,30): of
SyntaxKind[TerminalLiteral](83,33): `<`
SyntaxKind[OrKeyword](83,37): or
SyntaxKind[TerminalLiteral](83,40): `>`
SyntaxKind[OrKeyword](83,44): or
SyntaxKind[TerminalLiteral](83,47): `\`
SyntaxKind[OrKeyword](83,51): or
SyntaxKind[Identifier](83,54): LineTerminator
SyntaxKind[TerminalLiteral](84,2): `\`
SyntaxKind[Identifier](84,6): EscapeSequence
SyntaxKind[Identifier](85,2): LineContinuation
SyntaxKind[Identifier](87,1): LineContinuation
SyntaxKind[ColonColonToken](87,18): ::
SyntaxKind[TerminalLiteral](88,2): `\`
SyntaxKind[Identifier](88,6): LineTerminatorSequence
SyntaxKind[Identifier](90,1): EscapeSequence
SyntaxKind[ColonColonToken](90,16): ::
SyntaxKind[Identifier](91,2): CharacterEscapeSequence
SyntaxKind[TerminalLiteral](92,2): `0`
SyntaxKind[OpenBracketToken](92,6): [
SyntaxKind[LookaheadKeyword](92,7): lookahead
SyntaxKind[LessThanExclamationToken](92,17): <!
SyntaxKind[Identifier](92,20): DecimalDigit
SyntaxKind[CloseBracketToken](92,32): ]
SyntaxKind[Identifier](93,2): HexEscapeSequence
SyntaxKind[Identifier](94,2): UnicodeEscapeSequence
SyntaxKind[Identifier](96,1): CharacterEscapeSequence
SyntaxKind[ColonColonToken](96,25): ::
SyntaxKind[Identifier](97,2): SingleEscapeCharacter
SyntaxKind[Identifier](98,2): NonEscapeCharacter
SyntaxKind[Identifier](100,1): SingleEscapeCharacter
SyntaxKind[ColonColonToken](100,23): ::
SyntaxKind[OneKeyword](100,26): one
SyntaxKind[OfKeyword](100,30): of
SyntaxKind[TerminalLiteral](101,2): `'`
SyntaxKind[TerminalLiteral](101,6): `"`
SyntaxKind[TerminalLiteral](101,10): `\`
SyntaxKind[TerminalLiteral](101,14): `b`
SyntaxKind[TerminalLiteral](101,18): `f`
SyntaxKind[TerminalLiteral](101,22): `n`
SyntaxKind[TerminalLiteral](101,26): `r`
SyntaxKind[TerminalLiteral](101,30): `t`
SyntaxKind[TerminalLiteral](101,34): `v`
SyntaxKind[Identifier](103,1): NonEscapeCharacter
SyntaxKind[ColonColonToken](103,20): ::
SyntaxKind[Identifier](104,2): SourceCharacter
SyntaxKind[ButKeyword](104,18): but
SyntaxKind[NotKeyword](104,22): not
SyntaxKind[OneKeyword](104,26): one
SyntaxKind[OfKeyword](104,30): of
SyntaxKind[Identifier](104,33): EscapeCharacter
SyntaxKind[OrKeyword](104,49): or
SyntaxKind[Identifier](104,52): LineTerminator
SyntaxKind[Identifier](106,1): EscapeCharacter
SyntaxKind[ColonColonToken](106,17): ::
SyntaxKind[Identifier](107,2): SingleEscapeCharacter
SyntaxKind[Identifier](108,2): DecimalDigit
SyntaxKind[TerminalLiteral](109,2): `x`
SyntaxKind[TerminalLiteral](110,2): `u`
SyntaxKind[Identifier](112,1): HexEscapeSequence
SyntaxKind[ColonColonToken](112,19): ::
SyntaxKind[TerminalLiteral](113,2): `x`
SyntaxKind[Identifier](113,6): HexDigit
SyntaxKind[Identifier](113,15): HexDigit
SyntaxKind[Identifier](115,1): UnicodeEscapeSequence
SyntaxKind[ColonColonToken](115,23): ::
SyntaxKind[TerminalLiteral](116,2): `u`
SyntaxKind[Identifier](116,6): Hex4Digits
SyntaxKind[TerminalLiteral](117,2): `u{`
SyntaxKind[Identifier](117,7): HexDigits
SyntaxKind[TerminalLiteral](117,17): `}`
SyntaxKind[Identifier](119,1): Hex4Digits
SyntaxKind[ColonColonToken](119,12): ::
SyntaxKind[Identifier](120,2): HexDigit
SyntaxKind[Identifier](120,11): HexDigit
SyntaxKind[Identifier](120,20): HexDigit
SyntaxKind[Identifier](120,29): HexDigit
SyntaxKind[Identifier](122,1): Indent
SyntaxKind[ColonColonToken](122,8): ::
SyntaxKind[GreaterThanToken](123,2): >
SyntaxKind[ProseFull](123,4): An increase in the indentation depth from the previous line.
SyntaxKind[Identifier](125,1): Dedent
SyntaxKind[ColonColonToken](125,8): ::
SyntaxKind[GreaterThanToken](126,2): >
SyntaxKind[ProseFull](126,4): A decrease in the indentation depth from the previous line.
SyntaxKind[Identifier](128,1): Terminal
SyntaxKind[ColonColonToken](128,10): ::
SyntaxKind[TerminalLiteral](129,2): ```
SyntaxKind[TerminalLiteral](129,6): ```
SyntaxKind[TerminalLiteral](129,10): ```
SyntaxKind[TerminalLiteral](130,2): ```
SyntaxKind[Identifier](130,6): TerminalChars
SyntaxKind[TerminalLiteral](130,20): ```
SyntaxKind[Identifier](132,1): TerminalChars
SyntaxKind[ColonColonToken](132,15): ::
SyntaxKind[Identifier](133,2): TerminalChar
SyntaxKind[Identifier](133,15): TerminalChars
SyntaxKind[QuestionToken](133,28): ?
SyntaxKind[Identifier](135,1): TerminalChar
SyntaxKind[ColonColonToken](135,14): ::
SyntaxKind[Identifier](136,2): SourceCharacter
SyntaxKind[ButKeyword](136,18): but
SyntaxKind[NotKeyword](136,22): not
SyntaxKind[OneKeyword](136,26): one
SyntaxKind[OfKeyword](136,30): of
SyntaxKind[TerminalLiteral](136,33): ```
SyntaxKind[OrKeyword](136,37): or
SyntaxKind[Identifier](136,40): LineTerminator
SyntaxKind[Identifier](138,1): Prose
SyntaxKind[ColonColonToken](138,7): ::
SyntaxKind[Identifier](139,2): ProseLines
SyntaxKind[Identifier](141,1): ProseLines
SyntaxKind[ColonColonToken](141,12): ::
SyntaxKind[Identifier](142,2): ProseLine
SyntaxKind[Identifier](143,2): ProseLine
SyntaxKind[Identifier](143,12): LineTerminator
SyntaxKind[Identifier](143,27): ProseLines
SyntaxKind[Identifier](145,1): ProseLine
SyntaxKind[ColonColonToken](145,11): ::
SyntaxKind[TerminalLiteral](146,2): `>`
SyntaxKind[Identifier](146,6): ProseChars
SyntaxKind[QuestionToken](146,16): ?
SyntaxKind[Identifier](148,1): ProseChars
SyntaxKind[ColonColonToken](148,12): ::
SyntaxKind[Identifier](149,2): ProseChar
SyntaxKind[Identifier](149,12): ProseChars
SyntaxKind[QuestionToken](149,22): ?
SyntaxKind[Identifier](151,1): ProseChar
SyntaxKind[ColonColonToken](151,11): ::
SyntaxKind[Identifier](152,2): SourceCharacter
SyntaxKind[ButKeyword](152,18): but
SyntaxKind[NotKeyword](152,22): not
SyntaxKind[Identifier](152,26): LineTerminator
SyntaxKind[Identifier](157,1): Identifier
SyntaxKind[ColonToken](157,12): :
SyntaxKind[Identifier](158,2): IdentifierName
SyntaxKind[ButKeyword](158,17): but
SyntaxKind[NotKeyword](158,21): not
SyntaxKind[Identifier](158,25): ReservedWord
SyntaxKind[Identifier](160,1): Argument
SyntaxKind[ColonToken](160,10): :
SyntaxKind[Identifier](161,2): Identifier
SyntaxKind[Identifier](163,1): Arguments
SyntaxKind[ColonToken](163,11): :
SyntaxKind[TerminalLiteral](164,2): `(`
SyntaxKind[TerminalLiteral](164,6): `)`
SyntaxKind[TerminalLiteral](165,2): `(`
SyntaxKind[Identifier](165,6): ArgumentList
SyntaxKind[TerminalLiteral](165,19): `)`
SyntaxKind[Identifier](167,1): ArgumentList
SyntaxKind[ColonToken](167,14): :
SyntaxKind[Identifier](168,2): Argument
SyntaxKind[Identifier](169,2): ArgumentList
SyntaxKind[TerminalLiteral](169,15): `,`
SyntaxKind[Identifier](169,19): Argument
SyntaxKind[Identifier](171,1): PrimarySymbol
SyntaxKind[ColonToken](171,15): :
SyntaxKind[Identifier](172,2): Terminal
SyntaxKind[Identifier](173,2): UnicodeCharacterLiteral
SyntaxKind[Identifier](174,2): Nonterminal
SyntaxKind[Identifier](176,1): Nonterminal
SyntaxKind[ColonToken](176,13): :
SyntaxKind[Identifier](177,2): Identifier
SyntaxKind[Identifier](177,13): Arguments
SyntaxKind[QuestionToken](177,22): ?
SyntaxKind[Identifier](179,1): OptionalSymbol
SyntaxKind[ColonToken](179,16): :
SyntaxKind[Identifier](180,2): PrimarySymbol
SyntaxKind[TerminalLiteral](180,16): `?`
SyntaxKind[QuestionToken](180,19): ?
SyntaxKind[Identifier](182,1): OrClause
SyntaxKind[ColonToken](182,10): :
SyntaxKind[Identifier](183,2): PrimarySymbol
SyntaxKind[Identifier](184,2): OrClause
SyntaxKind[TerminalLiteral](184,11): `or`
SyntaxKind[Identifier](184,16): PrimarySymbol
SyntaxKind[Identifier](186,1): OneOfSymbol
SyntaxKind[ColonToken](186,13): :
SyntaxKind[Identifier](187,2): PrimarySymbol
SyntaxKind[TerminalLiteral](188,2): `one`
SyntaxKind[TerminalLiteral](188,8): `of`
SyntaxKind[Identifier](188,13): OrClause
SyntaxKind[Identifier](190,1): UnarySymbol
SyntaxKind[ColonToken](190,13): :
SyntaxKind[Identifier](191,2): OneOfSymbol
SyntaxKind[Identifier](193,1): ButNotSymbol
SyntaxKind[ColonToken](193,14): :
SyntaxKind[Identifier](194,2): UnarySymbol
SyntaxKind[TerminalLiteral](194,14): `but`
SyntaxKind[TerminalLiteral](194,20): `not`
SyntaxKind[Identifier](194,26): UnarySymbol
SyntaxKind[Identifier](196,1): BinarySymbol
SyntaxKind[ColonToken](196,14): :
SyntaxKind[Identifier](197,2): ButNotSymbol
SyntaxKind[Identifier](198,2): UnarySymbol
SyntaxKind[Identifier](200,1): SymbolList
SyntaxKind[ColonToken](200,12): :
SyntaxKind[Identifier](201,2): PrimarySymbol
SyntaxKind[Identifier](202,2): SymbolList
SyntaxKind[TerminalLiteral](202,13): `,`
SyntaxKind[Identifier](202,17): PrimarySymbol
SyntaxKind[Identifier](204,1): SymbolSet
SyntaxKind[ColonToken](204,11): :
SyntaxKind[TerminalLiteral](205,2): `{`
SyntaxKind[Identifier](205,6): SymbolList
SyntaxKind[TerminalLiteral](205,17): `}`
SyntaxKind[Identifier](207,1): EmptyAssertionClause
SyntaxKind[ColonToken](207,22): :
SyntaxKind[TerminalLiteral](208,2): `empty`
SyntaxKind[Identifier](210,1): LookaheadEqualsAssertionClause
SyntaxKind[ColonToken](210,32): :
SyntaxKind[TerminalLiteral](211,2): `lookahead`
SyntaxKind[TerminalLiteral](211,14): `==`
SyntaxKind[Identifier](211,19): PrimarySymbol
SyntaxKind[Identifier](213,1): LookaheadNotEqualsAssertionClause
SyntaxKind[ColonToken](213,35): :
SyntaxKind[TerminalLiteral](214,2): `lookahead`
SyntaxKind[TerminalLiteral](214,14): `!=`
SyntaxKind[Identifier](214,19): PrimarySymbol
SyntaxKind[Identifier](216,1): LookaheadInAssertionClause
SyntaxKind[ColonToken](216,28): :
SyntaxKind[TerminalLiteral](217,2): `lookahead`
SyntaxKind[TerminalLiteral](217,14): `<-`
SyntaxKind[Identifier](217,19): SymbolSet
SyntaxKind[Identifier](219,1): LookaheadNotInAssertionClause
SyntaxKind[ColonToken](219,31): :
SyntaxKind[TerminalLiteral](220,2): `lookahead`
SyntaxKind[TerminalLiteral](220,14): `<!`
SyntaxKind[Identifier](220,19): SymbolSet
SyntaxKind[Identifier](222,1): LookaheadAssertionClause
SyntaxKind[ColonToken](222,26): :
SyntaxKind[Identifier](223,2): LookaheadEqualsAssertionClause
SyntaxKind[Identifier](224,2): LookaheadNotEqualsAssertionClause
SyntaxKind[Identifier](225,2): LookaheadInAssertionClause
SyntaxKind[Identifier](226,2): LookaheadNotInAssertionClause
SyntaxKind[Identifier](228,1): NoSymbolAssertionClause
SyntaxKind[ColonToken](228,25): :
SyntaxKind[TerminalLiteral](229,2): `no`
SyntaxKind[Identifier](229,7): OrClause
SyntaxKind[TerminalLiteral](229,16): `here`
SyntaxKind[Identifier](231,1): LexicalGoalAssertionClause
SyntaxKind[ColonToken](231,28): :
SyntaxKind[TerminalLiteral](232,2): `lexical`
SyntaxKind[TerminalLiteral](232,12): `goal`
SyntaxKind[Identifier](232,19): PrimarySymbol
SyntaxKind[Identifier](234,1): ParameterValueAssertionClause
SyntaxKind[ColonToken](234,31): :
SyntaxKind[TerminalLiteral](235,2): `~`
SyntaxKind[Identifier](235,6): Identifier
SyntaxKind[TerminalLiteral](236,2): `+`
SyntaxKind[Identifier](236,6): Identifier
SyntaxKind[Identifier](238,1): AssertionClause
SyntaxKind[ColonToken](238,17): :
SyntaxKind[Identifier](239,2): EmptyAssertionClause
SyntaxKind[Identifier](240,2): LookaheadAssertionClause
SyntaxKind[Identifier](241,2): NoSymbolAssertionClause
SyntaxKind[Identifier](242,2): LexicalGoalAssertionClause
SyntaxKind[Identifier](243,2): ParameterValueAssertionClause
SyntaxKind[Identifier](245,1): Assertion
SyntaxKind[ColonToken](245,11): :
SyntaxKind[TerminalLiteral](246,2): `[`
SyntaxKind[Identifier](246,6): AssertionClause
SyntaxKind[TerminalLiteral](246,22): `]`
SyntaxKind[Identifier](248,1): ProseSpan
SyntaxKind[ColonToken](248,11): :
SyntaxKind[Identifier](249,2): Prose
SyntaxKind[Identifier](250,2): ProseSpan
SyntaxKind[Identifier](250,12): LineTerminator
SyntaxKind[Identifier](250,27): Prose
SyntaxKind[Identifier](252,1): Symbol
SyntaxKind[ColonToken](252,8): :
SyntaxKind[Identifier](253,2): Assertion
SyntaxKind[Identifier](254,2): BinarySymbol
SyntaxKind[Identifier](256,1): SymbolSpan
SyntaxKind[ColonToken](256,12): :
SyntaxKind[Identifier](257,2): ProseSpan
SyntaxKind[Identifier](258,2): SymbolSpanRest
SyntaxKind[Identifier](260,1): SymbolSpanRest
SyntaxKind[ColonToken](260,16): :
SyntaxKind[Identifier](261,2): Symbol
SyntaxKind[Identifier](261,9): SymbolSpanRest
SyntaxKind[QuestionToken](261,23): ?
SyntaxKind[Identifier](263,1): RightHandSideList
SyntaxKind[ColonToken](263,19): :
SyntaxKind[Identifier](264,2): RightHandSide
SyntaxKind[Identifier](264,16): RightHandSideList
SyntaxKind[QuestionToken](264,33): ?
SyntaxKind[Identifier](266,1): RightHandSide
SyntaxKind[ColonToken](266,15): :
SyntaxKind[Identifier](267,2): SymbolSpan
SyntaxKind[Identifier](267,13): LineTerminator
SyntaxKind[Identifier](269,1): Terminals
SyntaxKind[ColonToken](269,11): :
SyntaxKind[Identifier](270,2): Terminal
SyntaxKind[Identifier](270,11): Terminals
SyntaxKind[QuestionToken](270,20): ?
SyntaxKind[Identifier](272,1): TerminalList
SyntaxKind[ColonToken](272,14): :
SyntaxKind[Identifier](273,2): Terminals
SyntaxKind[Identifier](274,2): TerminalList
SyntaxKind[Identifier](274,15): LineTerminator
SyntaxKind[Identifier](274,30): Terminals
SyntaxKind[Identifier](276,1): OneOfList
SyntaxKind[ColonToken](276,11): :
SyntaxKind[TerminalLiteral](277,2): `one`
SyntaxKind[TerminalLiteral](277,8): `of`
SyntaxKind[Identifier](277,13): Terminals
SyntaxKind[TerminalLiteral](278,2): `one`
SyntaxKind[TerminalLiteral](278,8): `of`
SyntaxKind[Identifier](278,13): LineTerminator
SyntaxKind[Identifier](278,28): Indent
SyntaxKind[Identifier](278,35): TerminalList
SyntaxKind[Identifier](278,48): Dedent
SyntaxKind[Identifier](280,1): Parameter
SyntaxKind[ColonToken](280,11): :
SyntaxKind[Identifier](281,2): Identifier
SyntaxKind[Identifier](283,1): ParameterList
SyntaxKind[ColonToken](283,15): :
SyntaxKind[Identifier](284,2): Parameter
SyntaxKind[Identifier](285,2): ParameterList
SyntaxKind[TerminalLiteral](285,16): `,`
SyntaxKind[Identifier](285,20): Parameter
SyntaxKind[Identifier](287,1): Parameters
SyntaxKind[ColonToken](287,12): :
SyntaxKind[TerminalLiteral](288,2): `(`
SyntaxKind[Identifier](288,6): ParameterList
SyntaxKind[TerminalLiteral](288,20): `)`
SyntaxKind[Identifier](290,1): Production
SyntaxKind[ColonToken](290,12): :
SyntaxKind[Identifier](291,2): Identifier
SyntaxKind[Identifier](291,13): Parameters
SyntaxKind[QuestionToken](291,23): ?
SyntaxKind[TerminalLiteral](291,25): `:`
SyntaxKind[Identifier](291,29): OneOfList
SyntaxKind[Identifier](292,2): Identifier
SyntaxKind[Identifier](292,13): Parameters
SyntaxKind[QuestionToken](292,23): ?
SyntaxKind[TerminalLiteral](292,25): `:`
SyntaxKind[Identifier](292,29): RightHandSide
SyntaxKind[Identifier](293,2): Identifier
SyntaxKind[Identifier](293,13): Parameters
SyntaxKind[QuestionToken](293,23): ?
SyntaxKind[TerminalLiteral](293,25): `:`
SyntaxKind[Identifier](293,29): LineTerminator
SyntaxKind[Identifier](293,44): Indent
SyntaxKind[Identifier](293,51): RightHandSideList
SyntaxKind[Identifier](293,69): Dedent
SyntaxKind[Identifier](295,1): SourceElement
SyntaxKind[ColonToken](295,15): :
SyntaxKind[OpenBracketToken](296,2): [
SyntaxKind[EmptyKeyword](296,3): empty
SyntaxKind[CloseBracketToken](296,8): ]
SyntaxKind[Identifier](297,2): Production
SyntaxKind[Identifier](299,1): SourceElements
SyntaxKind[ColonToken](299,16): :
SyntaxKind[Identifier](300,2): SourceElement
SyntaxKind[Identifier](300,16): SourceElements
SyntaxKind[QuestionToken](300,30): ?
SyntaxKind[Identifier](302,1): SourceFile
SyntaxKind[ColonToken](302,12): :
SyntaxKind[Identifier](303,2): SourceElements
SyntaxKind[EndOfFileToken](304,1): «EndOfFileToken»
